{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/GDos-dot/mbdds_fc20/blob/M1B2---Python/M1B2T4_AI2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tW3jK_BDgjno"
      },
      "source": [
        "# **Herramientas de Análisis**\n",
        "\n",
        "---\n",
        "---\n",
        "\n",
        "<!-- script html for image -->\n",
        "\n",
        "<center>\n",
        "\n",
        "\n",
        "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Sw-ep1-logo.svg/1280px-Sw-ep1-logo.svg.png\"  width=\"500\" height=\"150\"/>\n",
        "\n",
        "\n",
        "<br>\n",
        "\n",
        "Fuente de la imagen: [https://es.wikipedia.org](https://es.wikipedia.org/wiki/Star_Wars:_Episodio_I_-_La_amenaza_fantasma)\n",
        "\n",
        "</center>\n",
        "\n",
        "<br>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CLuiMPEMSvF6"
      },
      "source": [
        "# **Índice**\n",
        "\n",
        "---\n",
        "---\n",
        "\n",
        "> [Herramientas de Análisis](#scrollTo=tW3jK_BDgjno&line=20&uniqifier=1)\n",
        "<br>\n",
        ">>\n",
        ">> [Preparación del Entorno](#scrollTo=5zZfGqOugjnr&line=3&uniqifier=1) \\\\\n",
        ">>   \\\\\n",
        ">> [Ejercicio 1](#scrollTo=1J4h6kTngjn5&line=1&uniqifier=1) \\\\\n",
        ">>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5zZfGqOugjnr"
      },
      "source": [
        "# Preparación del entorno\n",
        "\n",
        "Padawan! Cuando inicies sesión en Colab, prepara el entorno ejecutando el siguiente código."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "JiKiPQdQgjnu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b389bcfb-9279-4414-e7bf-d7fa935e6191",
        "collapsed": true
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into '/content/mbdds_fc20'...\n",
            "remote: Enumerating objects: 1053, done.\u001b[K\n",
            "remote: Counting objects: 100% (61/61), done.\u001b[K\n",
            "remote: Compressing objects: 100% (31/31), done.\u001b[K\n",
            "remote: Total 1053 (delta 52), reused 30 (delta 30), pack-reused 992 (from 1)\u001b[K\n",
            "Receiving objects: 100% (1053/1053), 16.85 MiB | 19.47 MiB/s, done.\n",
            "Resolving deltas: 100% (694/694), done.\n",
            "Already up to date.\n",
            "/content/mbdds_fc20/Python\n",
            "Collecting aiohttp==3.7.3 (from -r requirementsColab.txt (line 1))\n",
            "  Downloading aiohttp-3.7.3.tar.gz (1.1 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m12.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting apiclient==1.0.4 (from -r requirementsColab.txt (line 2))\n",
            "  Downloading apiclient-1.0.4.tar.gz (4.9 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting argon2-cffi==20.1.0 (from -r requirementsColab.txt (line 3))\n",
            "  Downloading argon2_cffi-20.1.0-cp35-abi3-manylinux1_x86_64.whl.metadata (7.9 kB)\n",
            "Collecting async-timeout==3.0.1 (from -r requirementsColab.txt (line 4))\n",
            "  Downloading async_timeout-3.0.1-py3-none-any.whl.metadata (4.0 kB)\n",
            "Collecting atomicwrites==1.4.0 (from -r requirementsColab.txt (line 5))\n",
            "  Downloading atomicwrites-1.4.0-py2.py3-none-any.whl.metadata (5.6 kB)\n",
            "Requirement already satisfied: backcall==0.2.0 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 6)) (0.2.0)\n",
            "Collecting beautifulsoup4==4.6.3 (from -r requirementsColab.txt (line 7))\n",
            "  Downloading beautifulsoup4-4.6.3-py3-none-any.whl.metadata (3.0 kB)\n",
            "Collecting bleach==3.2.1 (from -r requirementsColab.txt (line 8))\n",
            "  Downloading bleach-3.2.1-py2.py3-none-any.whl.metadata (22 kB)\n",
            "Collecting Brotli==1.0.9 (from -r requirementsColab.txt (line 9))\n",
            "  Downloading Brotli-1.0.9-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl.metadata (1.4 kB)\n",
            "Collecting certifi==2020.6.20 (from -r requirementsColab.txt (line 10))\n",
            "  Downloading certifi-2020.6.20-py2.py3-none-any.whl.metadata (2.9 kB)\n",
            "Collecting chardet==3.0.4 (from -r requirementsColab.txt (line 11))\n",
            "  Downloading chardet-3.0.4-py2.py3-none-any.whl.metadata (3.2 kB)\n",
            "Collecting cheroot==8.5.2 (from -r requirementsColab.txt (line 12))\n",
            "  Downloading cheroot-8.5.2-py2.py3-none-any.whl.metadata (8.4 kB)\n",
            "Collecting CherryPy==18.6.0 (from -r requirementsColab.txt (line 13))\n",
            "  Downloading CherryPy-18.6.0-py2.py3-none-any.whl.metadata (8.2 kB)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 14)) (8.1.7)\n",
            "Collecting colorama==0.4.3 (from -r requirementsColab.txt (line 15))\n",
            "  Downloading colorama-0.4.3-py2.py3-none-any.whl.metadata (14 kB)\n",
            "Collecting curlify==2.2.1 (from -r requirementsColab.txt (line 16))\n",
            "  Downloading curlify-2.2.1.tar.gz (3.0 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting cssselect (from -r requirementsColab.txt (line 17))\n",
            "  Downloading cssselect-1.2.0-py2.py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting cycler==0.10.0 (from -r requirementsColab.txt (line 18))\n",
            "  Downloading cycler-0.10.0-py2.py3-none-any.whl.metadata (722 bytes)\n",
            "Collecting dash==1.17.0 (from -r requirementsColab.txt (line 19))\n",
            "  Downloading dash-1.17.0.tar.gz (75 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.3/75.3 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting dash-core-components==1.13.0 (from -r requirementsColab.txt (line 20))\n",
            "  Downloading dash_core_components-1.13.0.tar.gz (3.5 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.5/3.5 MB\u001b[0m \u001b[31m72.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting dash-html-components==1.1.1 (from -r requirementsColab.txt (line 21))\n",
            "  Downloading dash_html_components-1.1.1.tar.gz (188 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m188.2/188.2 kB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting dash-renderer==1.8.3 (from -r requirementsColab.txt (line 22))\n",
            "  Downloading dash_renderer-1.8.3.tar.gz (1.0 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m40.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting dash-table==4.11.0 (from -r requirementsColab.txt (line 23))\n",
            "  Downloading dash_table-4.11.0.tar.gz (1.8 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m56.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: decorator==4.4.2 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 24)) (4.4.2)\n",
            "Collecting defusedxml==0.6.0 (from -r requirementsColab.txt (line 25))\n",
            "  Downloading defusedxml-0.6.0-py2.py3-none-any.whl.metadata (31 kB)\n",
            "Collecting entrypoints==0.3 (from -r requirementsColab.txt (line 26))\n",
            "  Downloading entrypoints-0.3-py2.py3-none-any.whl.metadata (1.4 kB)\n",
            "Collecting eurostat==0.2.1 (from -r requirementsColab.txt (line 27))\n",
            "  Downloading eurostat-0.2.1-py3-none-any.whl.metadata (18 kB)\n",
            "Collecting facebook-business==9.0.3 (from -r requirementsColab.txt (line 28))\n",
            "  Downloading facebook_business-9.0.3-py3-none-any.whl.metadata (17 kB)\n",
            "Collecting Flask==1.1.2 (from -r requirementsColab.txt (line 29))\n",
            "  Downloading Flask-1.1.2-py2.py3-none-any.whl.metadata (4.6 kB)\n",
            "Collecting Flask-Compress==1.7.0 (from -r requirementsColab.txt (line 30))\n",
            "  Downloading Flask-Compress-1.7.0.tar.gz (9.3 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting future==0.16.0 (from -r requirementsColab.txt (line 31))\n",
            "  Downloading future-0.16.0.tar.gz (824 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m824.5/824.5 kB\u001b[0m \u001b[31m31.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting google==3.0.0 (from -r requirementsColab.txt (line 32))\n",
            "  Downloading google-3.0.0-py2.py3-none-any.whl.metadata (627 bytes)\n",
            "Collecting google-auth==1.21.1 (from -r requirementsColab.txt (line 33))\n",
            "  Downloading google_auth-1.21.1-py2.py3-none-any.whl.metadata (3.1 kB)\n",
            "Collecting httplib2==0.19.0 (from -r requirementsColab.txt (line 34))\n",
            "  Downloading httplib2-0.19.0-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting idna==2.10 (from -r requirementsColab.txt (line 35))\n",
            "  Downloading idna-2.10-py2.py3-none-any.whl.metadata (9.1 kB)\n",
            "Collecting idna-ssl==1.1.0 (from -r requirementsColab.txt (line 36))\n",
            "  Downloading idna-ssl-1.1.0.tar.gz (3.4 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting iniconfig==1.1.1 (from -r requirementsColab.txt (line 37))\n",
            "  Downloading iniconfig-1.1.1-py2.py3-none-any.whl.metadata (2.4 kB)\n",
            "Requirement already satisfied: ipykernel in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 38)) (5.5.6)\n",
            "Requirement already satisfied: ipython in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 39)) (7.34.0)\n",
            "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 40)) (0.2.0)\n",
            "Requirement already satisfied: ipywidgets in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 41)) (7.7.1)\n",
            "Collecting itsdangerous==1.1.0 (from -r requirementsColab.txt (line 42))\n",
            "  Downloading itsdangerous-1.1.0-py2.py3-none-any.whl.metadata (3.1 kB)\n",
            "Collecting jaraco.classes==3.2.1 (from -r requirementsColab.txt (line 43))\n",
            "  Downloading jaraco.classes-3.2.1-py3-none-any.whl.metadata (1.9 kB)\n",
            "Collecting jaraco.collections==3.2.0 (from -r requirementsColab.txt (line 44))\n",
            "  Downloading jaraco.collections-3.2.0-py3-none-any.whl.metadata (3.1 kB)\n",
            "Collecting jaraco.functools==3.2.1 (from -r requirementsColab.txt (line 45))\n",
            "  Downloading jaraco.functools-3.2.1-py3-none-any.whl.metadata (2.1 kB)\n",
            "Collecting jaraco.text==3.5.0 (from -r requirementsColab.txt (line 46))\n",
            "  Downloading jaraco.text-3.5.0-py3-none-any.whl.metadata (2.0 kB)\n",
            "Collecting jedi==0.17.2 (from -r requirementsColab.txt (line 47))\n",
            "  Downloading jedi-0.17.2-py2.py3-none-any.whl.metadata (19 kB)\n",
            "Requirement already satisfied: Jinja2 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 48)) (3.1.4)\n",
            "Collecting jsonpath-rw==1.4.0 (from -r requirementsColab.txt (line 49))\n",
            "  Downloading jsonpath-rw-1.4.0.tar.gz (13 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 50)) (4.23.0)\n",
            "Collecting jupyter (from -r requirementsColab.txt (line 51))\n",
            "  Downloading jupyter-1.1.1-py2.py3-none-any.whl.metadata (2.0 kB)\n",
            "Collecting jupytext==1.6.0 (from -r requirementsColab.txt (line 52))\n",
            "  Downloading jupytext-1.6.0.tar.gz (683 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m683.5/683.5 kB\u001b[0m \u001b[31m32.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting kiwisolver==1.2.0 (from -r requirementsColab.txt (line 53))\n",
            "  Downloading kiwisolver-1.2.0.tar.gz (52 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m52.1/52.1 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 54)) (5.3.0)\n",
            "Collecting MarkupSafe==1.1.1 (from -r requirementsColab.txt (line 55))\n",
            "  Downloading MarkupSafe-1.1.1.tar.gz (19 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 56)) (3.8.0)\n",
            "Collecting mistune==0.8.4 (from -r requirementsColab.txt (line 57))\n",
            "  Downloading mistune-0.8.4-py2.py3-none-any.whl.metadata (8.5 kB)\n",
            "Collecting more-itertools==8.7.0 (from -r requirementsColab.txt (line 58))\n",
            "  Downloading more_itertools-8.7.0-py3-none-any.whl.metadata (39 kB)\n",
            "Collecting multidict==5.1.0 (from -r requirementsColab.txt (line 59))\n",
            "  Downloading multidict-5.1.0.tar.gz (53 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m53.7/53.7 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: nbconvert in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 60)) (7.16.4)\n",
            "Requirement already satisfied: nbformat in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 61)) (5.10.4)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 62)) (1.26.4)\n",
            "Requirement already satisfied: oauth2client==4.1.3 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 63)) (4.1.3)\n",
            "Collecting oauthlib==3.1.0 (from -r requirementsColab.txt (line 64))\n",
            "  Downloading oauthlib-3.1.0-py2.py3-none-any.whl.metadata (7.1 kB)\n",
            "Requirement already satisfied: pandas>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 65)) (2.2.2)\n",
            "Collecting pandaSDMX==0.9 (from -r requirementsColab.txt (line 66))\n",
            "  Downloading pandaSDMX-0.9-py2.py3-none-any.whl.metadata (403 bytes)\n",
            "Collecting pandocfilters==1.4.2 (from -r requirementsColab.txt (line 67))\n",
            "  Downloading pandocfilters-1.4.2.tar.gz (14 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting parso==0.7.1 (from -r requirementsColab.txt (line 68))\n",
            "  Downloading parso-0.7.1-py2.py3-none-any.whl.metadata (7.0 kB)\n",
            "Collecting pexpect==4.8.0 (from -r requirementsColab.txt (line 69))\n",
            "  Downloading pexpect-4.8.0-py2.py3-none-any.whl.metadata (2.2 kB)\n",
            "Requirement already satisfied: pickleshare==0.7.5 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 70)) (0.7.5)\n",
            "Collecting plotly==4.4.1 (from -r requirementsColab.txt (line 71))\n",
            "  Downloading plotly-4.4.1-py2.py3-none-any.whl.metadata (7.3 kB)\n",
            "Collecting pluggy==0.13.1 (from -r requirementsColab.txt (line 72))\n",
            "  Downloading pluggy-0.13.1-py2.py3-none-any.whl.metadata (15 kB)\n",
            "Requirement already satisfied: ply==3.11 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 73)) (3.11)\n",
            "Collecting portend==2.7.1 (from -r requirementsColab.txt (line 74))\n",
            "  Downloading portend-2.7.1-py3-none-any.whl.metadata (3.3 kB)\n",
            "Collecting prometheus-client==0.8.0 (from -r requirementsColab.txt (line 75))\n",
            "  Downloading prometheus_client-0.8.0-py2.py3-none-any.whl.metadata (18 kB)\n",
            "Collecting prompt-toolkit==1.0.18 (from -r requirementsColab.txt (line 76))\n",
            "  Downloading prompt_toolkit-1.0.18-py3-none-any.whl.metadata (7.9 kB)\n",
            "Collecting ptyprocess==0.6.0 (from -r requirementsColab.txt (line 77))\n",
            "  Downloading ptyprocess-0.6.0-py2.py3-none-any.whl.metadata (1.3 kB)\n",
            "Collecting py==1.9.0 (from -r requirementsColab.txt (line 78))\n",
            "  Downloading py-1.9.0-py2.py3-none-any.whl.metadata (2.8 kB)\n",
            "Collecting pyasn1==0.4.8 (from -r requirementsColab.txt (line 79))\n",
            "  Downloading pyasn1-0.4.8-py2.py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting pyasn1-modules==0.2.8 (from -r requirementsColab.txt (line 80))\n",
            "  Downloading pyasn1_modules-0.2.8-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "Collecting pycountry==20.7.3 (from -r requirementsColab.txt (line 81))\n",
            "  Downloading pycountry-20.7.3.tar.gz (10.1 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.1/10.1 MB\u001b[0m \u001b[31m62.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting pycparser==2.20 (from -r requirementsColab.txt (line 82))\n",
            "  Downloading pycparser-2.20-py2.py3-none-any.whl.metadata (907 bytes)\n",
            "Collecting pymongo==3.11.0 (from -r requirementsColab.txt (line 83))\n",
            "  Downloading pymongo-3.11.0.tar.gz (771 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m771.7/771.7 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting pyrsistent==0.17.3 (from -r requirementsColab.txt (line 84))\n",
            "  Downloading pyrsistent-0.17.3.tar.gz (106 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m106.9/106.9 kB\u001b[0m \u001b[31m6.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Requirement already satisfied: PySocks==1.7.1 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 85)) (1.7.1)\n",
            "Collecting pytest==6.1.2 (from -r requirementsColab.txt (line 86))\n",
            "  Downloading pytest-6.1.2-py3-none-any.whl.metadata (7.3 kB)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 87)) (6.0.2)\n",
            "Collecting qtconsole==4.7.7 (from -r requirementsColab.txt (line 88))\n",
            "  Downloading qtconsole-4.7.7-py2.py3-none-any.whl.metadata (4.8 kB)\n",
            "Collecting QtPy==1.9.0 (from -r requirementsColab.txt (line 89))\n",
            "  Downloading QtPy-1.9.0-py2.py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 90)) (2.32.3)\n",
            "Collecting requests-oauthlib==1.3.0 (from -r requirementsColab.txt (line 91))\n",
            "  Downloading requests_oauthlib-1.3.0-py2.py3-none-any.whl.metadata (9.6 kB)\n",
            "Collecting retrying==1.3.3 (from -r requirementsColab.txt (line 92))\n",
            "  Downloading retrying-1.3.3.tar.gz (10 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting rsa==4.7.1 (from -r requirementsColab.txt (line 93))\n",
            "  Downloading rsa-4.7.1-py3-none-any.whl.metadata (3.6 kB)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 94)) (1.13.1)\n",
            "Collecting seaborn==0.11.0 (from -r requirementsColab.txt (line 95))\n",
            "  Downloading seaborn-0.11.0-py3-none-any.whl.metadata (2.2 kB)\n",
            "Collecting selenium==3.141.0 (from -r requirementsColab.txt (line 96))\n",
            "  Downloading selenium-3.141.0-py2.py3-none-any.whl.metadata (6.6 kB)\n",
            "Collecting Send2Trash==1.5.0 (from -r requirementsColab.txt (line 97))\n",
            "  Downloading Send2Trash-1.5.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "Collecting simplegeneric==0.8.1 (from -r requirementsColab.txt (line 98))\n",
            "  Downloading simplegeneric-0.8.1.zip (12 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting six==1.15.0 (from -r requirementsColab.txt (line 99))\n",
            "  Downloading six-1.15.0-py2.py3-none-any.whl.metadata (1.8 kB)\n",
            "Collecting soupsieve==2.0.1 (from -r requirementsColab.txt (line 100))\n",
            "  Downloading soupsieve-2.0.1-py3-none-any.whl.metadata (5.4 kB)\n",
            "Requirement already satisfied: tornado in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 101)) (6.3.3)\n",
            "Collecting terminado==0.9.1 (from -r requirementsColab.txt (line 102))\n",
            "  Downloading terminado-0.9.1-py3-none-any.whl.metadata (3.5 kB)\n",
            "Collecting testpath==0.4.4 (from -r requirementsColab.txt (line 103))\n",
            "  Downloading testpath-0.4.4-py2.py3-none-any.whl.metadata (1.2 kB)\n",
            "Collecting toml==0.10.1 (from -r requirementsColab.txt (line 104))\n",
            "  Downloading toml-0.10.1-py2.py3-none-any.whl.metadata (6.4 kB)\n",
            "Collecting tornado (from -r requirementsColab.txt (line 101))\n",
            "  Downloading tornado-5.1.1.tar.gz (516 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m516.8/516.8 kB\u001b[0m \u001b[31m30.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting tweepy==3.6.0 (from -r requirementsColab.txt (line 106))\n",
            "  Downloading tweepy-3.6.0-py2.py3-none-any.whl.metadata (1.1 kB)\n",
            "Collecting ujson==4.0.1 (from -r requirementsColab.txt (line 107))\n",
            "  Downloading ujson-4.0.1.tar.gz (7.1 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.1/7.1 MB\u001b[0m \u001b[31m86.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting urllib3==1.24.3 (from -r requirementsColab.txt (line 108))\n",
            "  Downloading urllib3-1.24.3-py2.py3-none-any.whl.metadata (36 kB)\n",
            "Collecting wcwidth==0.2.5 (from -r requirementsColab.txt (line 109))\n",
            "  Downloading wcwidth-0.2.5-py2.py3-none-any.whl.metadata (11 kB)\n",
            "Requirement already satisfied: webencodings==0.5.1 in /usr/local/lib/python3.10/dist-packages (from -r requirementsColab.txt (line 110)) (0.5.1)\n",
            "Collecting Werkzeug==1.0.1 (from -r requirementsColab.txt (line 111))\n",
            "  Downloading Werkzeug-1.0.1-py2.py3-none-any.whl.metadata (4.7 kB)\n",
            "Collecting widgetsnbextension==3.5.1 (from -r requirementsColab.txt (line 112))\n",
            "  Downloading widgetsnbextension-3.5.1-py2.py3-none-any.whl.metadata (1.3 kB)\n",
            "Collecting wincertstore==0.2 (from -r requirementsColab.txt (line 113))\n",
            "  Downloading wincertstore-0.2-py2.py3-none-any.whl.metadata (4.6 kB)\n",
            "Collecting world-bank-data==0.1.3 (from -r requirementsColab.txt (line 114))\n",
            "  Downloading world_bank_data-0.1.3.tar.gz (12 kB)\n",
            "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting yarl==1.6.3 (from -r requirementsColab.txt (line 115))\n",
            "  Downloading yarl-1.6.3.tar.gz (176 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m176.8/176.8 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting zc.lockfile==2.0 (from -r requirementsColab.txt (line 116))\n",
            "  Downloading zc.lockfile-2.0-py2.py3-none-any.whl.metadata (5.9 kB)\n",
            "Collecting zipp==3.3.1 (from -r requirementsColab.txt (line 117))\n",
            "  Downloading zipp-3.3.1-py3-none-any.whl.metadata (2.4 kB)\n",
            "Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp==3.7.3->-r requirementsColab.txt (line 1)) (24.3.0)\n",
            "Requirement already satisfied: typing_extensions>=3.6.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp==3.7.3->-r requirementsColab.txt (line 1)) (4.12.2)\n",
            "Requirement already satisfied: cffi>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi==20.1.0->-r requirementsColab.txt (line 3)) (1.17.1)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from bleach==3.2.1->-r requirementsColab.txt (line 8)) (24.2)\n",
            "Collecting cachetools<5.0,>=2.0.0 (from google-auth==1.21.1->-r requirementsColab.txt (line 33))\n",
            "  Downloading cachetools-4.2.4-py3-none-any.whl.metadata (4.8 kB)\n",
            "Requirement already satisfied: setuptools>=40.3.0 in /usr/local/lib/python3.10/dist-packages (from google-auth==1.21.1->-r requirementsColab.txt (line 33)) (75.1.0)\n",
            "Collecting pyparsing<3,>=2.4.2 (from httplib2==0.19.0->-r requirementsColab.txt (line 34))\n",
            "  Downloading pyparsing-2.4.7-py2.py3-none-any.whl.metadata (3.6 kB)\n",
            "Collecting markdown-it-py~=0.5.2 (from jupytext==1.6.0->-r requirementsColab.txt (line 52))\n",
            "  Downloading markdown_it_py-0.5.8-py3-none-any.whl.metadata (6.3 kB)\n",
            "Collecting tempora>=1.8 (from portend==2.7.1->-r requirementsColab.txt (line 74))\n",
            "  Downloading tempora-5.8.0-py3-none-any.whl.metadata (3.3 kB)\n",
            "Requirement already satisfied: traitlets in /usr/local/lib/python3.10/dist-packages (from qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (5.7.1)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.10/dist-packages (from qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (5.7.2)\n",
            "Requirement already satisfied: jupyter-client>=4.1 in /usr/local/lib/python3.10/dist-packages (from qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (6.1.12)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (2.18.0)\n",
            "Requirement already satisfied: pyzmq>=17.1 in /usr/local/lib/python3.10/dist-packages (from qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (24.0.1)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112)) (6.5.5)\n",
            "INFO: pip is looking at multiple versions of ipython to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting ipython (from -r requirementsColab.txt (line 39))\n",
            "  Downloading ipython-8.31.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from ipython->-r requirementsColab.txt (line 39)) (1.2.2)\n",
            "Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython->-r requirementsColab.txt (line 39)) (0.1.7)\n",
            "  Downloading ipython-8.30.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.29.0-py3-none-any.whl.metadata (5.0 kB)\n",
            "  Downloading ipython-8.28.0-py3-none-any.whl.metadata (5.0 kB)\n",
            "  Downloading ipython-8.27.0-py3-none-any.whl.metadata (5.0 kB)\n",
            "  Downloading ipython-8.26.0-py3-none-any.whl.metadata (5.0 kB)\n",
            "  Downloading ipython-8.25.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "INFO: pip is still looking at multiple versions of ipython to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading ipython-8.24.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.23.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.22.2-py3-none-any.whl.metadata (4.8 kB)\n",
            "  Downloading ipython-8.22.1-py3-none-any.whl.metadata (4.8 kB)\n",
            "  Downloading ipython-8.21.0-py3-none-any.whl.metadata (5.9 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "  Downloading ipython-8.20.0-py3-none-any.whl.metadata (5.9 kB)\n",
            "  Downloading ipython-8.18.1-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading ipython-8.18.0-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading ipython-8.17.2-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading ipython-8.17.1-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading ipython-8.16.1-py3-none-any.whl.metadata (5.9 kB)\n",
            "  Downloading ipython-8.15.0-py3-none-any.whl.metadata (5.9 kB)\n",
            "  Downloading ipython-8.14.0-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.13.2-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.13.1-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.12.3-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.12.2-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.12.1-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.12.0-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading ipython-8.11.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.10.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.9.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.8.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.7.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.6.0-py3-none-any.whl.metadata (5.7 kB)\n",
            "  Downloading ipython-8.5.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.4.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.3.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.2.0-py3-none-any.whl.metadata (4.9 kB)\n",
            "  Downloading ipython-8.1.1-py3-none-any.whl.metadata (4.8 kB)\n",
            "  Downloading ipython-8.1.0-py3-none-any.whl.metadata (4.8 kB)\n",
            "  Downloading ipython-8.0.1-py3-none-any.whl.metadata (4.8 kB)\n",
            "Collecting black (from ipython->-r requirementsColab.txt (line 39))\n",
            "  Downloading black-24.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (79 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.2/79.2 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting ipython (from -r requirementsColab.txt (line 39))\n",
            "  Downloading ipython-8.0.0-py3-none-any.whl.metadata (4.8 kB)\n",
            "  Downloading ipython-7.33.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.32.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.31.1-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.31.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.30.1-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.29.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.28.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.27.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.26.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.25.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.24.1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.24.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.23.1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.23.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.22.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.21.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.20.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.19.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.18.1-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.18.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.17.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.16.3-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.16.2-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.16.1-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.16.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.15.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.14.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.13.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "  Downloading ipython-7.12.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.11.1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.11.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.10.2-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.10.1-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.10.0-py3-none-any.whl.metadata (4.2 kB)\n",
            "  Downloading ipython-7.9.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.8.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.7.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.6.1-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.6.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.5.0-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-7.4.0-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-7.3.0-py3-none-any.whl.metadata (4.3 kB)\n",
            "  Downloading ipython-7.2.0-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-7.1.1-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-7.0.1-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-7.0.0-py3-none-any.whl.metadata (4.5 kB)\n",
            "  Downloading ipython-6.5.0-py3-none-any.whl.metadata (4.4 kB)\n",
            "INFO: pip is looking at multiple versions of ipywidgets to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting ipywidgets (from -r requirementsColab.txt (line 41))\n",
            "  Downloading ipywidgets-8.1.5-py3-none-any.whl.metadata (2.3 kB)\n",
            "Collecting comm>=0.1.3 (from ipywidgets->-r requirementsColab.txt (line 41))\n",
            "  Downloading comm-0.2.2-py3-none-any.whl.metadata (3.7 kB)\n",
            "Collecting ipywidgets (from -r requirementsColab.txt (line 41))\n",
            "  Downloading ipywidgets-8.1.4-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-8.1.3-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading ipywidgets-8.1.2-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading ipywidgets-8.1.1-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading ipywidgets-8.1.0-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading ipywidgets-8.0.7-py3-none-any.whl.metadata (2.4 kB)\n",
            "INFO: pip is still looking at multiple versions of ipywidgets to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading ipywidgets-8.0.6-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading ipywidgets-8.0.5-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-8.0.4-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-8.0.3-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-8.0.2-py3-none-any.whl.metadata (2.3 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "  Downloading ipywidgets-8.0.1-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-8.0.0-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading ipywidgets-7.8.5-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.8.4-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.8.3-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.8.2-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.8.1-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.8.0-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.7.5-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.7.4-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.7.3-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.7.2-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.7.0-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "  Downloading ipywidgets-7.6.6-py2.py3-none-any.whl.metadata (1.9 kB)\n",
            "Collecting jupyterlab-widgets<3,>=1.0.0 (from ipywidgets->-r requirementsColab.txt (line 41))\n",
            "  Downloading jupyterlab_widgets-1.1.11-py3-none-any.whl.metadata (3.7 kB)\n",
            "INFO: pip is looking at multiple versions of jinja2 to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting Jinja2 (from -r requirementsColab.txt (line 48))\n",
            "  Downloading jinja2-3.1.5-py3-none-any.whl.metadata (2.6 kB)\n",
            "  Downloading Jinja2-3.1.3-py3-none-any.whl.metadata (3.3 kB)\n",
            "  Downloading Jinja2-3.1.2-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-3.1.1-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-3.1.0-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-3.0.3-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-3.0.2-py3-none-any.whl.metadata (3.5 kB)\n",
            "INFO: pip is still looking at multiple versions of jinja2 to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading Jinja2-3.0.1-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-3.0.0-py3-none-any.whl.metadata (3.5 kB)\n",
            "  Downloading Jinja2-2.11.3-py2.py3-none-any.whl.metadata (3.5 kB)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema->-r requirementsColab.txt (line 50)) (2024.10.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema->-r requirementsColab.txt (line 50)) (0.35.1)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema->-r requirementsColab.txt (line 50)) (0.22.3)\n",
            "Requirement already satisfied: jupyter-console in /usr/local/lib/python3.10/dist-packages (from jupyter->-r requirementsColab.txt (line 51)) (6.1.0)\n",
            "Collecting jupyterlab (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab-4.3.4-py3-none-any.whl.metadata (16 kB)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->-r requirementsColab.txt (line 56)) (1.3.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->-r requirementsColab.txt (line 56)) (4.55.3)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->-r requirementsColab.txt (line 56)) (11.0.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->-r requirementsColab.txt (line 56)) (2.8.2)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert->-r requirementsColab.txt (line 60)) (0.3.0)\n",
            "INFO: pip is looking at multiple versions of nbconvert to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting nbconvert (from -r requirementsColab.txt (line 60))\n",
            "  Downloading nbconvert-7.16.3-py3-none-any.whl.metadata (8.2 kB)\n",
            "  Downloading nbconvert-7.16.2-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.16.1-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.16.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.15.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.14.2-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.14.1-py3-none-any.whl.metadata (7.7 kB)\n",
            "INFO: pip is still looking at multiple versions of nbconvert to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading nbconvert-7.14.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.13.1-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.13.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.12.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading nbconvert-7.11.0-py3-none-any.whl.metadata (7.7 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "  Downloading nbconvert-7.10.0-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading nbconvert-7.9.2-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.9.1-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.9.0-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.8.0-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.7.4-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.7.3-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.7.2-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.7.1-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.7.0-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.6.0-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.5.0-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.4.0-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading nbconvert-7.3.1-py3-none-any.whl.metadata (8.1 kB)\n",
            "  Downloading nbconvert-7.3.0-py3-none-any.whl.metadata (8.1 kB)\n",
            "  Downloading nbconvert-7.2.10-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading nbconvert-7.2.9-py3-none-any.whl.metadata (8.3 kB)\n",
            "  Downloading nbconvert-7.2.8-py3-none-any.whl.metadata (8.3 kB)\n",
            "  Downloading nbconvert-7.2.7-py3-none-any.whl.metadata (8.3 kB)\n",
            "  Downloading nbconvert-7.2.6-py3-none-any.whl.metadata (8.3 kB)\n",
            "  Downloading nbconvert-7.2.5-py3-none-any.whl.metadata (9.1 kB)\n",
            "  Downloading nbconvert-7.2.4-py3-none-any.whl.metadata (9.1 kB)\n",
            "  Downloading nbconvert-7.2.3-py3-none-any.whl.metadata (9.1 kB)\n",
            "  Downloading nbconvert-7.2.2-py3-none-any.whl.metadata (9.1 kB)\n",
            "  Downloading nbconvert-7.2.1-py3-none-any.whl.metadata (9.1 kB)\n",
            "  Downloading nbconvert-7.1.0-py3-none-any.whl.metadata (9.0 kB)\n",
            "  Downloading nbconvert-7.0.0-py3-none-any.whl.metadata (9.2 kB)\n",
            "  Downloading nbconvert-6.5.4-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading nbconvert-6.5.3-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading nbconvert-6.5.2-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading nbconvert-6.5.1-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading nbconvert-6.5.0-py3-none-any.whl.metadata (6.0 kB)\n",
            "  Downloading nbconvert-6.4.5-py3-none-any.whl.metadata (5.9 kB)\n",
            "Collecting nbclient<0.6.0,>=0.5.0 (from nbconvert->-r requirementsColab.txt (line 60))\n",
            "  Downloading nbclient-0.5.13-py3-none-any.whl.metadata (5.0 kB)\n",
            "Collecting nbconvert (from -r requirementsColab.txt (line 60))\n",
            "  Downloading nbconvert-6.4.4-py3-none-any.whl.metadata (5.8 kB)\n",
            "Requirement already satisfied: fastjsonschema>=2.15 in /usr/local/lib/python3.10/dist-packages (from nbformat->-r requirementsColab.txt (line 61)) (2.21.1)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=2.2.0->-r requirementsColab.txt (line 65)) (2024.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=2.2.0->-r requirementsColab.txt (line 65)) (2024.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->-r requirementsColab.txt (line 90)) (3.4.0)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core->qtconsole==4.7.7->-r requirementsColab.txt (line 88)) (4.3.6)\n",
            "INFO: pip is looking at multiple versions of markdown-it-py to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting markdown-it-py~=0.5.2 (from jupytext==1.6.0->-r requirementsColab.txt (line 52))\n",
            "  Downloading markdown_it_py-0.5.7-py3-none-any.whl.metadata (6.2 kB)\n",
            "  Downloading markdown_it_py-0.5.6-py3-none-any.whl.metadata (6.1 kB)\n",
            "  Downloading markdown_it_py-0.5.5-py3-none-any.whl.metadata (5.5 kB)\n",
            "  Downloading markdown_it_py-0.5.4-py3-none-any.whl.metadata (5.5 kB)\n",
            "  Downloading markdown_it_py-0.5.3-py3-none-any.whl.metadata (5.5 kB)\n",
            "  Downloading markdown_it_py-0.5.2-py3-none-any.whl.metadata (5.3 kB)\n",
            "Collecting nbformat (from -r requirementsColab.txt (line 61))\n",
            "  Downloading nbformat-5.10.4-py3-none-any.whl.metadata (3.6 kB)\n",
            "INFO: pip is still looking at multiple versions of markdown-it-py to determine which version is compatible with other requirements. This could take a while.\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "Collecting jsonschema (from -r requirementsColab.txt (line 50))\n",
            "  Downloading jsonschema-4.23.0-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading jsonschema-4.22.0-py3-none-any.whl.metadata (8.2 kB)\n",
            "  Downloading jsonschema-4.21.1-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading jsonschema-4.21.0-py3-none-any.whl.metadata (8.0 kB)\n",
            "  Downloading jsonschema-4.20.0-py3-none-any.whl.metadata (8.1 kB)\n",
            "  Downloading jsonschema-4.19.2-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading jsonschema-4.19.1-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading jsonschema-4.19.0-py3-none-any.whl.metadata (8.2 kB)\n",
            "  Downloading jsonschema-4.18.6-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading jsonschema-4.18.5-py3-none-any.whl.metadata (7.7 kB)\n",
            "  Downloading jsonschema-4.18.4-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading jsonschema-4.18.3-py3-none-any.whl.metadata (7.9 kB)\n",
            "  Downloading jsonschema-4.18.2-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading jsonschema-4.18.1-py3-none-any.whl.metadata (7.8 kB)\n",
            "  Downloading jsonschema-4.18.0-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jsonschema-4.17.3-py3-none-any.whl.metadata (7.9 kB)\n",
            "Collecting attrs>=17.3.0 (from aiohttp==3.7.3->-r requirementsColab.txt (line 1))\n",
            "  Downloading attrs-20.3.0-py2.py3-none-any.whl.metadata (10 kB)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from nbclient<0.6.0,>=0.5.0->nbconvert->-r requirementsColab.txt (line 60)) (1.6.0)\n",
            "INFO: pip is looking at multiple versions of notebook to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting notebook>=4.4.1 (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading notebook-7.3.2-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyter-server<3,>=2.4.0 (from notebook>=4.4.1->widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading jupyter_server-2.15.0-py3-none-any.whl.metadata (8.4 kB)\n",
            "Collecting jupyterlab-server<3,>=2.27.1 (from notebook>=4.4.1->widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading jupyterlab_server-2.27.3-py3-none-any.whl.metadata (5.9 kB)\n",
            "Requirement already satisfied: notebook-shim<0.3,>=0.2 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112)) (0.2.4)\n",
            "Collecting notebook>=4.4.1 (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading notebook-7.3.1-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.3.0-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.2.3-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyterlab (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab-4.2.6-py3-none-any.whl.metadata (16 kB)\n",
            "Collecting notebook>=4.4.1 (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading notebook-7.2.2-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.2.1-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.2.0-py3-none-any.whl.metadata (10 kB)\n",
            "INFO: pip is still looking at multiple versions of notebook to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading notebook-7.1.3-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyterlab (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab-4.1.8-py3-none-any.whl.metadata (16 kB)\n",
            "Collecting notebook>=4.4.1 (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading notebook-7.1.2-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.1.1-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.1.0-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.8-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyterlab (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab-4.0.13-py3-none-any.whl.metadata (15 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "Collecting notebook>=4.4.1 (from widgetsnbextension==3.5.1->-r requirementsColab.txt (line 112))\n",
            "  Downloading notebook-7.0.7-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.6-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.5-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.4-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.3-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.2-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.1-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-7.0.0-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading notebook-6.5.7-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.5.6-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.5.4-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.5.3-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.5.2-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.5.1-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.4.13-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.4.12-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.4.11-py3-none-any.whl.metadata (2.5 kB)\n",
            "  Downloading notebook-6.4.10-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading notebook-6.4.9-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading notebook-6.4.8-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading notebook-6.4.7-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading notebook-6.4.6-py3-none-any.whl.metadata (2.4 kB)\n",
            "  Downloading notebook-6.4.5-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.4.4-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.4.3-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.4.2-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.4.1-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.4.0-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.3.0-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.2.0-py3-none-any.whl.metadata (2.3 kB)\n",
            "  Downloading notebook-6.1.6-py3-none-any.whl.metadata (2.3 kB)\n",
            "INFO: pip is looking at multiple versions of jupyter-console to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting jupyter-console (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyter_console-6.6.3-py3-none-any.whl.metadata (5.8 kB)\n",
            "Collecting ipykernel (from -r requirementsColab.txt (line 38))\n",
            "  Downloading ipykernel-6.29.5-py3-none-any.whl.metadata (6.3 kB)\n",
            "Collecting jupyter-client>=4.1 (from qtconsole==4.7.7->-r requirementsColab.txt (line 88))\n",
            "  Downloading jupyter_client-8.6.3-py3-none-any.whl.metadata (8.3 kB)\n",
            "Collecting jupyter-console (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyter_console-6.6.2-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading jupyter_console-6.6.1-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading jupyter_console-6.6.0-py3-none-any.whl.metadata (5.8 kB)\n",
            "  Downloading jupyter_console-6.5.1-py3-none-any.whl.metadata (1.4 kB)\n",
            "  Downloading jupyter_console-6.5.0-py3-none-any.whl.metadata (1.4 kB)\n",
            "  Downloading jupyter_console-6.4.4-py3-none-any.whl.metadata (1.2 kB)\n",
            "INFO: pip is still looking at multiple versions of jupyter-console to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading jupyter_console-6.4.3-py3-none-any.whl.metadata (1.2 kB)\n",
            "  Downloading jupyter_console-6.4.2-py3-none-any.whl.metadata (1.2 kB)\n",
            "  Downloading jupyter_console-6.4.1-py3-none-any.whl.metadata (1.2 kB)\n",
            "  Downloading jupyter_console-6.4.0-py3-none-any.whl.metadata (951 bytes)\n",
            "  Downloading jupyter_console-6.3.0-py3-none-any.whl.metadata (951 bytes)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "  Downloading jupyter_console-6.2.0-py3-none-any.whl.metadata (951 bytes)\n",
            "  Downloading jupyter_console-6.0.0-py2.py3-none-any.whl.metadata (955 bytes)\n",
            "  Downloading jupyter_console-5.2.0-py2.py3-none-any.whl.metadata (1.1 kB)\n",
            "Collecting async-lru>=1.0.0 (from jupyterlab->jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading async_lru-2.0.4-py3-none-any.whl.metadata (4.5 kB)\n",
            "Requirement already satisfied: httpx>=0.25.0 in /usr/local/lib/python3.10/dist-packages (from jupyterlab->jupyter->-r requirementsColab.txt (line 51)) (0.28.1)\n",
            "Collecting jupyter-lsp>=2.0.0 (from jupyterlab->jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyter_lsp-2.2.5-py3-none-any.whl.metadata (1.8 kB)\n",
            "Requirement already satisfied: tomli>=1.2.2 in /usr/local/lib/python3.10/dist-packages (from jupyterlab->jupyter->-r requirementsColab.txt (line 51)) (2.2.1)\n",
            "INFO: pip is looking at multiple versions of jupyterlab to determine which version is compatible with other requirements. This could take a while.\n",
            "Collecting jupyterlab (from jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab-4.3.3-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.3.2-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.3.1-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.3.0-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.2.5-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.2.4-py3-none-any.whl.metadata (16 kB)\n",
            "INFO: pip is still looking at multiple versions of jupyterlab to determine which version is compatible with other requirements. This could take a while.\n",
            "  Downloading jupyterlab-4.2.3-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.2.2-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.2.1-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.2.0-py3-none-any.whl.metadata (16 kB)\n",
            "INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n",
            "  Downloading jupyterlab-4.1.7-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.1.6-py3-none-any.whl.metadata (16 kB)\n",
            "  Downloading jupyterlab-4.1.5-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.1.4-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.1.3-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.1.2-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.1.1-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.1.0-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.12-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.11-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.10-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.9-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.8-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.7-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.6-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.5-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.4-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.3-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.2-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.1-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-4.0.0-py3-none-any.whl.metadata (15 kB)\n",
            "  Downloading jupyterlab-3.6.8-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.7-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.6-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.5-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.4-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.3-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.2-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.1-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.6.0-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.5.3-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.5.2-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.5.1-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.5.0-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.4.8-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.4.7-py3-none-any.whl.metadata (12 kB)\n",
            "  Downloading jupyterlab-3.4.6-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.5-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.4-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.3-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.2-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.1-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.4.0-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.3.4-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.3.3-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.3.2-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.3.1-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.3.0-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.9-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.8-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.7-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.6-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.5-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.4-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.3-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.2-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.1-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.2.0-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.19-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.18-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.17-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.16-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.14-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.13-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.12-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.11-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.10-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.9-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.8-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.7-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.6-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.4-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.2-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.1-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.1.0-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-3.0.18-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.17-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.16-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.15-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.14-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.13-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.12-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.11-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.10-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.9-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.8-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.7-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.6-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.5-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.4-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.3-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.2-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.1-py3-none-any.whl.metadata (10 kB)\n",
            "  Downloading jupyterlab-3.0.0-py3-none-any.whl.metadata (11 kB)\n",
            "  Downloading jupyterlab-2.3.2-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyterlab-server<2.0,>=1.1.5 (from jupyterlab->jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading jupyterlab_server-1.2.0-py3-none-any.whl.metadata (1.5 kB)\n",
            "Collecting json5 (from jupyterlab-server<2.0,>=1.1.5->jupyterlab->jupyter->-r requirementsColab.txt (line 51))\n",
            "  Downloading json5-0.10.0-py3-none-any.whl.metadata (34 kB)\n",
            "Downloading argon2_cffi-20.1.0-cp35-abi3-manylinux1_x86_64.whl (97 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.0/98.0 kB\u001b[0m \u001b[31m7.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading async_timeout-3.0.1-py3-none-any.whl (8.2 kB)\n",
            "Downloading atomicwrites-1.4.0-py2.py3-none-any.whl (6.8 kB)\n",
            "Downloading beautifulsoup4-4.6.3-py3-none-any.whl (90 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m90.4/90.4 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading bleach-3.2.1-py2.py3-none-any.whl (145 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m146.0/146.0 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading Brotli-1.0.9-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (2.7 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.7/2.7 MB\u001b[0m \u001b[31m66.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading certifi-2020.6.20-py2.py3-none-any.whl (156 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m156.6/156.6 kB\u001b[0m \u001b[31m10.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m133.4/133.4 kB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading cheroot-8.5.2-py2.py3-none-any.whl (97 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m97.1/97.1 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading CherryPy-18.6.0-py2.py3-none-any.whl (419 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m419.0/419.0 kB\u001b[0m \u001b[31m25.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading colorama-0.4.3-py2.py3-none-any.whl (15 kB)\n",
            "Downloading cycler-0.10.0-py2.py3-none-any.whl (6.5 kB)\n",
            "Downloading defusedxml-0.6.0-py2.py3-none-any.whl (23 kB)\n",
            "Downloading entrypoints-0.3-py2.py3-none-any.whl (11 kB)\n",
            "Downloading eurostat-0.2.1-py3-none-any.whl (11 kB)\n",
            "Downloading facebook_business-9.0.3-py3-none-any.whl (1.0 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m43.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading Flask-1.1.2-py2.py3-none-any.whl (94 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m94.6/94.6 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading google-3.0.0-py2.py3-none-any.whl (45 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.3/45.3 kB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading google_auth-1.21.1-py2.py3-none-any.whl (93 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m93.0/93.0 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading httplib2-0.19.0-py3-none-any.whl (95 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m95.4/95.4 kB\u001b[0m \u001b[31m5.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading idna-2.10-py2.py3-none-any.whl (58 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.8/58.8 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n",
            "Downloading itsdangerous-1.1.0-py2.py3-none-any.whl (16 kB)\n",
            "Downloading jaraco.classes-3.2.1-py3-none-any.whl (5.6 kB)\n",
            "Downloading jaraco.collections-3.2.0-py3-none-any.whl (9.7 kB)\n",
            "Downloading jaraco.functools-3.2.1-py3-none-any.whl (6.7 kB)\n",
            "Downloading jaraco.text-3.5.0-py3-none-any.whl (8.1 kB)\n",
            "Downloading jedi-0.17.2-py2.py3-none-any.whl (1.4 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m49.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading mistune-0.8.4-py2.py3-none-any.whl (16 kB)\n",
            "Downloading more_itertools-8.7.0-py3-none-any.whl (48 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m48.4/48.4 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading oauthlib-3.1.0-py2.py3-none-any.whl (147 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m147.4/147.4 kB\u001b[0m \u001b[31m10.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pandaSDMX-0.9-py2.py3-none-any.whl (45 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.4/45.4 kB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading parso-0.7.1-py2.py3-none-any.whl (109 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m109.5/109.5 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m59.0/59.0 kB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading plotly-4.4.1-py2.py3-none-any.whl (7.3 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.3/7.3 MB\u001b[0m \u001b[31m62.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n",
            "Downloading portend-2.7.1-py3-none-any.whl (5.3 kB)\n",
            "Downloading prometheus_client-0.8.0-py2.py3-none-any.whl (53 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m53.6/53.6 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading prompt_toolkit-1.0.18-py3-none-any.whl (245 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m245.4/245.4 kB\u001b[0m \u001b[31m14.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading ptyprocess-0.6.0-py2.py3-none-any.whl (39 kB)\n",
            "Downloading py-1.9.0-py2.py3-none-any.whl (99 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m99.0/99.0 kB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyasn1-0.4.8-py2.py3-none-any.whl (77 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m77.1/77.1 kB\u001b[0m \u001b[31m5.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyasn1_modules-0.2.8-py2.py3-none-any.whl (155 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m155.3/155.3 kB\u001b[0m \u001b[31m10.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pycparser-2.20-py2.py3-none-any.whl (112 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m112.0/112.0 kB\u001b[0m \u001b[31m8.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pytest-6.1.2-py3-none-any.whl (272 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m272.4/272.4 kB\u001b[0m \u001b[31m14.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading qtconsole-4.7.7-py2.py3-none-any.whl (118 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.5/118.5 kB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading QtPy-1.9.0-py2.py3-none-any.whl (54 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.2/54.2 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading requests_oauthlib-1.3.0-py2.py3-none-any.whl (23 kB)\n",
            "Downloading rsa-4.7.1-py3-none-any.whl (36 kB)\n",
            "Downloading seaborn-0.11.0-py3-none-any.whl (283 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m283.1/283.1 kB\u001b[0m \u001b[31m17.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading selenium-3.141.0-py2.py3-none-any.whl (904 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m904.6/904.6 kB\u001b[0m \u001b[31m39.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading Send2Trash-1.5.0-py3-none-any.whl (12 kB)\n",
            "Downloading six-1.15.0-py2.py3-none-any.whl (10 kB)\n",
            "Downloading soupsieve-2.0.1-py3-none-any.whl (32 kB)\n",
            "Downloading terminado-0.9.1-py3-none-any.whl (13 kB)\n",
            "Downloading testpath-0.4.4-py2.py3-none-any.whl (163 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m163.9/163.9 kB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading toml-0.10.1-py2.py3-none-any.whl (19 kB)\n",
            "Downloading tweepy-3.6.0-py2.py3-none-any.whl (29 kB)\n",
            "Downloading urllib3-1.24.3-py2.py3-none-any.whl (118 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.8/118.8 kB\u001b[0m \u001b[31m7.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)\n",
            "Downloading Werkzeug-1.0.1-py2.py3-none-any.whl (298 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m298.6/298.6 kB\u001b[0m \u001b[31m18.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading widgetsnbextension-3.5.1-py2.py3-none-any.whl (2.2 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m53.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading wincertstore-0.2-py2.py3-none-any.whl (8.8 kB)\n",
            "Downloading zc.lockfile-2.0-py2.py3-none-any.whl (9.7 kB)\n",
            "Downloading zipp-3.3.1-py3-none-any.whl (5.3 kB)\n",
            "Downloading cssselect-1.2.0-py2.py3-none-any.whl (18 kB)\n",
            "Downloading ipython-6.5.0-py3-none-any.whl (748 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m748.4/748.4 kB\u001b[0m \u001b[31m36.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading ipywidgets-7.6.6-py2.py3-none-any.whl (121 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m121.8/121.8 kB\u001b[0m \u001b[31m6.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading Jinja2-2.11.3-py2.py3-none-any.whl (125 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m125.7/125.7 kB\u001b[0m \u001b[31m8.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m90.4/90.4 kB\u001b[0m \u001b[31m6.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading markdown_it_py-0.5.8-py3-none-any.whl (110 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m110.1/110.1 kB\u001b[0m \u001b[31m6.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading attrs-20.3.0-py2.py3-none-any.whl (49 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.3/49.3 kB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jupyter-1.1.1-py2.py3-none-any.whl (2.7 kB)\n",
            "Downloading nbconvert-6.4.4-py3-none-any.whl (561 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m561.4/561.4 kB\u001b[0m \u001b[31m28.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading cachetools-4.2.4-py3-none-any.whl (10 kB)\n",
            "Downloading jupyterlab_widgets-1.1.11-py3-none-any.whl (246 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m246.9/246.9 kB\u001b[0m \u001b[31m15.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading nbclient-0.5.13-py3-none-any.whl (70 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m70.6/70.6 kB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading notebook-6.1.6-py3-none-any.whl (9.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.5/9.5 MB\u001b[0m \u001b[31m71.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.8/67.8 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading tempora-5.8.0-py3-none-any.whl (14 kB)\n",
            "Downloading jupyter_console-5.2.0-py2.py3-none-any.whl (20 kB)\n",
            "Downloading jupyterlab-2.3.2-py3-none-any.whl (7.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m69.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jupyterlab_server-1.2.0-py3-none-any.whl (29 kB)\n",
            "Downloading json5-0.10.0-py3-none-any.whl (34 kB)\n",
            "Building wheels for collected packages: aiohttp, apiclient, curlify, dash, dash-core-components, dash-html-components, dash-renderer, dash-table, Flask-Compress, future, idna-ssl, jsonpath-rw, jupytext, kiwisolver, MarkupSafe, multidict, pandocfilters, pycountry, pymongo, pyrsistent, retrying, simplegeneric, tornado, ujson, world-bank-data, yarl\n",
            "  Building wheel for aiohttp (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for aiohttp: filename=aiohttp-3.7.3-cp310-cp310-linux_x86_64.whl size=1272541 sha256=ad40522446fd6648b05d96d6a9b78f69ed597a01bccce4c88c419493937becf5\n",
            "  Stored in directory: /root/.cache/pip/wheels/86/c7/ab/11a65f51900fe7555b46f90bf7029099c86e82668fc4ece2d7\n",
            "  Building wheel for apiclient (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for apiclient: filename=apiclient-1.0.4-py3-none-any.whl size=5195 sha256=16b05ec2c03d46a12fd77bf039a2520e544087684ec16171c614acaa64b4265d\n",
            "  Stored in directory: /root/.cache/pip/wheels/34/3d/05/8d65e9bcb2117ea3739b0fbf64d660a1cf06fa9def589ea306\n",
            "  Building wheel for curlify (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for curlify: filename=curlify-2.2.1-py3-none-any.whl size=2667 sha256=a17c3259cd60641729706ab8c375caa7288403f91ef263b13845ea2d22a974ee\n",
            "  Stored in directory: /root/.cache/pip/wheels/01/e8/2f/e0e986ab1e8956d5ad10aabc059767c822d6114ed295a28dd5\n",
            "  Building wheel for dash (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for dash: filename=dash-1.17.0-py3-none-any.whl size=83709 sha256=89503abfe0617ae66dc441a13d6e9972c2c89b7a8bcd10b5dd9f4cde68a2ce3f\n",
            "  Stored in directory: /root/.cache/pip/wheels/18/fb/f3/4209b723989bd83d38598c3dbf2eef4d93f1e447422c0bb67f\n",
            "  Building wheel for dash-core-components (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for dash-core-components: filename=dash_core_components-1.13.0-py3-none-any.whl size=3513117 sha256=40d6cdf694fd397717b70367023f4b4cb9853d994a91a9a36cbc904b8165268c\n",
            "  Stored in directory: /root/.cache/pip/wheels/36/30/ba/9b66275fc30f4c516f1bc15b1b0bd6ee42e0f5258125ee5e59\n",
            "  Building wheel for dash-html-components (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for dash-html-components: filename=dash_html_components-1.1.1-py3-none-any.whl size=427896 sha256=822a243eeb6b58dfd2e26c6fed4d9e289e10503e40b0f84a5c550237e42aa24b\n",
            "  Stored in directory: /root/.cache/pip/wheels/0f/0a/47/43e6029111a75c59351ad70d864bc01e4032f86bd256d85fd6\n",
            "  Building wheel for dash-renderer (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for dash-renderer: filename=dash_renderer-1.8.3-py3-none-any.whl size=1013919 sha256=6666145cdc11cbf9223b42f98dbae77b75b601507f58783be1be472a90c55c70\n",
            "  Stored in directory: /root/.cache/pip/wheels/6c/04/c8/22a0b5a26c3ecb61e17a27d4bbe7fad32d1417bbdbd4d46acf\n",
            "  Building wheel for dash-table (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for dash-table: filename=dash_table-4.11.0-py3-none-any.whl size=1839745 sha256=30effae2867c82b253c8240222fb54d1d892b173a070642983f021b873b4ae51\n",
            "  Stored in directory: /root/.cache/pip/wheels/53/d1/a0/935a1de4932ba05b003965b22978729439da5629e93f9b2ca9\n",
            "  Building wheel for Flask-Compress (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for Flask-Compress: filename=Flask_Compress-1.7.0-py3-none-any.whl size=6842 sha256=c1b21a8bd52cf47719b6496a9741ff5c850d7eeb913ab8131c9369d18ab5cd7d\n",
            "  Stored in directory: /root/.cache/pip/wheels/1c/76/63/2eb21d2df10685712f14f88cb4b726f0d0a433c827ec5ac3a6\n",
            "  Building wheel for future (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for future: filename=future-0.16.0-py3-none-any.whl size=487791 sha256=1a6eebbc76244bc82b198147bec095509b4975440eda9ad947cd7d150f7d6286\n",
            "  Stored in directory: /root/.cache/pip/wheels/99/10/cf/94af142fb7fe16e7327b17dc4d6d69ed041f8ec74b1fef10b2\n",
            "  Building wheel for idna-ssl (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for idna-ssl: filename=idna_ssl-1.1.0-py3-none-any.whl size=3154 sha256=6a44f0be380918e5297fba2a94a73199365a865076ab2dd67944e401edbcfd1c\n",
            "  Stored in directory: /root/.cache/pip/wheels/39/8e/d8/c6ff12694e3d5e82719330ade69b967f0cb3e2e39bd77349b6\n",
            "  Building wheel for jsonpath-rw (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for jsonpath-rw: filename=jsonpath_rw-1.4.0-py3-none-any.whl size=15130 sha256=917849fbd9be590bf318191f73b1eb374b30aabaa540e480f6e1917120a7f869\n",
            "  Stored in directory: /root/.cache/pip/wheels/e3/76/6f/c25be6a9e6cc9985b96e8c95997d46790242c6426ef68e754c\n",
            "  Building wheel for jupytext (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for jupytext: filename=jupytext-1.6.0-py3-none-any.whl size=284357 sha256=cca394fe7ac366dd67153ed006ad5492265580767844f61682baa325f382a645\n",
            "  Stored in directory: /root/.cache/pip/wheels/0d/a1/2a/0e1598fc741e8ff287b8e0a8d96aa4710f21affb9b34a21d03\n",
            "  Building wheel for kiwisolver (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for kiwisolver: filename=kiwisolver-1.2.0-cp310-cp310-linux_x86_64.whl size=1146230 sha256=281cc4c28069534aefa4daf2967158c2f7121eb2e68f6b6bce2e4991983c5d19\n",
            "  Stored in directory: /root/.cache/pip/wheels/04/b8/14/9455223ef48e268c6a2f3f7845d222ed818c7dfbcebe4ff830\n",
            "  Building wheel for MarkupSafe (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-cp310-cp310-linux_x86_64.whl size=27859 sha256=85fee45cb7338bb3f968cac2cd9636e48ac89cc7d78206920d694a13c6c2ddc5\n",
            "  Stored in directory: /root/.cache/pip/wheels/a6/81/81/3fcafa7c24e4b4e25bcf383c792b343e53c38e6196f44bc3e3\n",
            "  Building wheel for multidict (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for multidict: filename=multidict-5.1.0-cp310-cp310-linux_x86_64.whl size=129858 sha256=b3450d4a95d4597f4bcee7919717ca9f3d779f99ae85e1c3273c472e96fb89cb\n",
            "  Stored in directory: /root/.cache/pip/wheels/d4/d9/c5/954971ffbc9e6243acb54dd49edd4557e15dfa7d5bb834f4b3\n",
            "  Building wheel for pandocfilters (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pandocfilters: filename=pandocfilters-1.4.2-py3-none-any.whl size=7852 sha256=14bbfd6d19c52a33fcfb630b1f7fcb831500515ebde30bcb1bdbb59d5d6eb9a9\n",
            "  Stored in directory: /root/.cache/pip/wheels/2d/67/20/bfc2f2f60be9c94f1f2d5ac3eafd904ca44b3e7f40cdd4755a\n",
            "  Building wheel for pycountry (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pycountry: filename=pycountry-20.7.3-py2.py3-none-any.whl size=10746860 sha256=914d6ee7a0b881f029a58960d1dc6f410dbcdb4382223a57c032a5d13d04b996\n",
            "  Stored in directory: /root/.cache/pip/wheels/13/02/fb/ae3c9bc96046c6ac677a5fca5a6b52519f1c8ba91e6f3a00dd\n",
            "  Building wheel for pymongo (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pymongo: filename=pymongo-3.11.0-cp310-cp310-linux_x86_64.whl size=493670 sha256=2fbbdadfcfb41762d39d314a8581d665fca9ffc776b84f88b7382127a40eb342\n",
            "  Stored in directory: /root/.cache/pip/wheels/df/6e/99/27524029bf53fd025e0d44093d77e4fc0b27c6344acd6f3e86\n",
            "  Building wheel for pyrsistent (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyrsistent: filename=pyrsistent-0.17.3-cp310-cp310-linux_x86_64.whl size=104924 sha256=9c0c5fffabd12b33c35f7c15c7b509dad24e8ddfee7e27c9306ed199770148b7\n",
            "  Stored in directory: /root/.cache/pip/wheels/4d/c1/4c/ab1c10431b09a4eb236f9ffe3c05b659b98761065d7a44501d\n",
            "  Building wheel for retrying (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for retrying: filename=retrying-1.3.3-py3-none-any.whl size=11428 sha256=93eaab25993e99ba4f497b37a305f6c5fb9721ebd9d06abeb70b30c75e745014\n",
            "  Stored in directory: /root/.cache/pip/wheels/21/0a/27/62f77273aa12fefb20b9b277f1e937f98ae16dbd04ffa2b93a\n",
            "  Building wheel for simplegeneric (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for simplegeneric: filename=simplegeneric-0.8.1-py3-none-any.whl size=5058 sha256=058ad9bccbc0af974aa4197a864df1c8c79514e3c006d8a247e26dcede57b308\n",
            "  Stored in directory: /root/.cache/pip/wheels/6a/88/e8/d4f4d830f0edaf91815bd9714e65b3c57ebc95c4ddfc6416a6\n",
            "  Building wheel for tornado (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for tornado: filename=tornado-5.1.1-cp310-cp310-linux_x86_64.whl size=457825 sha256=3edaa06784f0c323045f3ce6740538a40ebae5e225a46175fb472ad8e25db1a9\n",
            "  Stored in directory: /root/.cache/pip/wheels/ce/e8/38/bf770195abc71b38509001874acaceed4f70c075b02529eb41\n",
            "  Building wheel for ujson (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for ujson: filename=ujson-4.0.1-cp310-cp310-linux_x86_64.whl size=215513 sha256=7970ad5c0e8842df1a2e69d4d656e6e02bb02192cb88e75cfeb2ea923e4c1a35\n",
            "  Stored in directory: /root/.cache/pip/wheels/cc/e1/52/041380b19803ec9c5dc999ae9d3b9618558ae6452710828827\n",
            "  Building wheel for world-bank-data (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for world-bank-data: filename=world_bank_data-0.1.3-py3-none-any.whl size=11089 sha256=1ece1df563a51780cc8ec3d8c07ebd32b9480745be2e1bb95c91307fc1aec6ae\n",
            "  Stored in directory: /root/.cache/pip/wheels/a3/ba/6f/7040ac2cf2d06ed4633fb9dd8bc2000a0cabf766b5a17d4d1a\n",
            "  Building wheel for yarl (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for yarl: filename=yarl-1.6.3-cp310-cp310-linux_x86_64.whl size=268592 sha256=6b0a358b747b5e746d84149936e32586cd2f6e342d96033562c9da3d8fec01af\n",
            "  Stored in directory: /root/.cache/pip/wheels/16/b2/12/49a1339f36564a61d694938cc4872942c71a6b1ae49888a884\n",
            "Successfully built aiohttp apiclient curlify dash dash-core-components dash-html-components dash-renderer dash-table Flask-Compress future idna-ssl jsonpath-rw jupytext kiwisolver MarkupSafe multidict pandocfilters pycountry pymongo pyrsistent retrying simplegeneric tornado ujson world-bank-data yarl\n",
            "Installing collected packages: wincertstore, wcwidth, toml, testpath, simplegeneric, Send2Trash, QtPy, pycountry, pyasn1, ptyprocess, prometheus-client, pandocfilters, mistune, iniconfig, future, dash-table, dash-renderer, dash-html-components, dash-core-components, chardet, certifi, Brotli, beautifulsoup4, zipp, zc.lockfile, Werkzeug, urllib3, ujson, tornado, soupsieve, six, rsa, pyrsistent, pyparsing, pymongo, pycparser, pyasn1-modules, py, pluggy, pexpect, parso, oauthlib, multidict, more-itertools, MarkupSafe, kiwisolver, jupyterlab-widgets, json5, itsdangerous, idna, google, entrypoints, defusedxml, cssselect, colorama, cachetools, attrs, atomicwrites, async-timeout, yarl, terminado, selenium, retrying, pytest, prompt-toolkit, markdown-it-py, jsonschema, jsonpath-rw, Jinja2, jedi, jaraco.functools, jaraco.classes, idna-ssl, httplib2, google-auth, cycler, bleach, apiclient, tempora, requests-oauthlib, plotly, jaraco.text, ipython, Flask, curlify, cheroot, argon2-cffi, aiohttp, world-bank-data, tweepy, seaborn, portend, pandaSDMX, nbclient, jupytext, jaraco.collections, Flask-Compress, facebook-business, qtconsole, nbconvert, jupyter-console, eurostat, dash, CherryPy, notebook, widgetsnbextension, jupyterlab-server, jupyterlab, ipywidgets, jupyter\n",
            "  Attempting uninstall: wcwidth\n",
            "    Found existing installation: wcwidth 0.2.13\n",
            "    Uninstalling wcwidth-0.2.13:\n",
            "      Successfully uninstalled wcwidth-0.2.13\n",
            "  Attempting uninstall: toml\n",
            "    Found existing installation: toml 0.10.2\n",
            "    Uninstalling toml-0.10.2:\n",
            "      Successfully uninstalled toml-0.10.2\n",
            "  Attempting uninstall: Send2Trash\n",
            "    Found existing installation: Send2Trash 1.8.3\n",
            "    Uninstalling Send2Trash-1.8.3:\n",
            "      Successfully uninstalled Send2Trash-1.8.3\n",
            "  Attempting uninstall: pyasn1\n",
            "    Found existing installation: pyasn1 0.6.1\n",
            "    Uninstalling pyasn1-0.6.1:\n",
            "      Successfully uninstalled pyasn1-0.6.1\n",
            "  Attempting uninstall: ptyprocess\n",
            "    Found existing installation: ptyprocess 0.7.0\n",
            "    Uninstalling ptyprocess-0.7.0:\n",
            "      Successfully uninstalled ptyprocess-0.7.0\n",
            "  Attempting uninstall: prometheus-client\n",
            "    Found existing installation: prometheus_client 0.21.1\n",
            "    Uninstalling prometheus_client-0.21.1:\n",
            "      Successfully uninstalled prometheus_client-0.21.1\n",
            "  Attempting uninstall: pandocfilters\n",
            "    Found existing installation: pandocfilters 1.5.1\n",
            "    Uninstalling pandocfilters-1.5.1:\n",
            "      Successfully uninstalled pandocfilters-1.5.1\n",
            "  Attempting uninstall: mistune\n",
            "    Found existing installation: mistune 3.0.2\n",
            "    Uninstalling mistune-3.0.2:\n",
            "      Successfully uninstalled mistune-3.0.2\n",
            "  Attempting uninstall: iniconfig\n",
            "    Found existing installation: iniconfig 2.0.0\n",
            "    Uninstalling iniconfig-2.0.0:\n",
            "      Successfully uninstalled iniconfig-2.0.0\n",
            "  Attempting uninstall: future\n",
            "    Found existing installation: future 1.0.0\n",
            "    Uninstalling future-1.0.0:\n",
            "      Successfully uninstalled future-1.0.0\n",
            "  Attempting uninstall: chardet\n",
            "    Found existing installation: chardet 5.2.0\n",
            "    Uninstalling chardet-5.2.0:\n",
            "      Successfully uninstalled chardet-5.2.0\n",
            "  Attempting uninstall: certifi\n",
            "    Found existing installation: certifi 2024.12.14\n",
            "    Uninstalling certifi-2024.12.14:\n",
            "      Successfully uninstalled certifi-2024.12.14\n",
            "  Attempting uninstall: beautifulsoup4\n",
            "    Found existing installation: beautifulsoup4 4.12.3\n",
            "    Uninstalling beautifulsoup4-4.12.3:\n",
            "      Successfully uninstalled beautifulsoup4-4.12.3\n",
            "  Attempting uninstall: zipp\n",
            "    Found existing installation: zipp 3.21.0\n",
            "    Uninstalling zipp-3.21.0:\n",
            "      Successfully uninstalled zipp-3.21.0\n",
            "  Attempting uninstall: Werkzeug\n",
            "    Found existing installation: Werkzeug 3.1.3\n",
            "    Uninstalling Werkzeug-3.1.3:\n",
            "      Successfully uninstalled Werkzeug-3.1.3\n",
            "  Attempting uninstall: urllib3\n",
            "    Found existing installation: urllib3 2.2.3\n",
            "    Uninstalling urllib3-2.2.3:\n",
            "      Successfully uninstalled urllib3-2.2.3\n",
            "  Attempting uninstall: tornado\n",
            "    Found existing installation: tornado 6.3.3\n",
            "    Uninstalling tornado-6.3.3:\n",
            "      Successfully uninstalled tornado-6.3.3\n",
            "  Attempting uninstall: soupsieve\n",
            "    Found existing installation: soupsieve 2.6\n",
            "    Uninstalling soupsieve-2.6:\n",
            "      Successfully uninstalled soupsieve-2.6\n",
            "  Attempting uninstall: six\n",
            "    Found existing installation: six 1.17.0\n",
            "    Uninstalling six-1.17.0:\n",
            "      Successfully uninstalled six-1.17.0\n",
            "  Attempting uninstall: rsa\n",
            "    Found existing installation: rsa 4.9\n",
            "    Uninstalling rsa-4.9:\n",
            "      Successfully uninstalled rsa-4.9\n",
            "  Attempting uninstall: pyparsing\n",
            "    Found existing installation: pyparsing 3.2.0\n",
            "    Uninstalling pyparsing-3.2.0:\n",
            "      Successfully uninstalled pyparsing-3.2.0\n",
            "  Attempting uninstall: pycparser\n",
            "    Found existing installation: pycparser 2.22\n",
            "    Uninstalling pycparser-2.22:\n",
            "      Successfully uninstalled pycparser-2.22\n",
            "  Attempting uninstall: pyasn1-modules\n",
            "    Found existing installation: pyasn1_modules 0.4.1\n",
            "    Uninstalling pyasn1_modules-0.4.1:\n",
            "      Successfully uninstalled pyasn1_modules-0.4.1\n",
            "  Attempting uninstall: pluggy\n",
            "    Found existing installation: pluggy 1.5.0\n",
            "    Uninstalling pluggy-1.5.0:\n",
            "      Successfully uninstalled pluggy-1.5.0\n",
            "  Attempting uninstall: pexpect\n",
            "    Found existing installation: pexpect 4.9.0\n",
            "    Uninstalling pexpect-4.9.0:\n",
            "      Successfully uninstalled pexpect-4.9.0\n",
            "  Attempting uninstall: parso\n",
            "    Found existing installation: parso 0.8.4\n",
            "    Uninstalling parso-0.8.4:\n",
            "      Successfully uninstalled parso-0.8.4\n",
            "  Attempting uninstall: oauthlib\n",
            "    Found existing installation: oauthlib 3.2.2\n",
            "    Uninstalling oauthlib-3.2.2:\n",
            "      Successfully uninstalled oauthlib-3.2.2\n",
            "  Attempting uninstall: multidict\n",
            "    Found existing installation: multidict 6.1.0\n",
            "    Uninstalling multidict-6.1.0:\n",
            "      Successfully uninstalled multidict-6.1.0\n",
            "  Attempting uninstall: more-itertools\n",
            "    Found existing installation: more-itertools 10.5.0\n",
            "    Uninstalling more-itertools-10.5.0:\n",
            "      Successfully uninstalled more-itertools-10.5.0\n",
            "  Attempting uninstall: MarkupSafe\n",
            "    Found existing installation: MarkupSafe 3.0.2\n",
            "    Uninstalling MarkupSafe-3.0.2:\n",
            "      Successfully uninstalled MarkupSafe-3.0.2\n",
            "  Attempting uninstall: kiwisolver\n",
            "    Found existing installation: kiwisolver 1.4.7\n",
            "    Uninstalling kiwisolver-1.4.7:\n",
            "      Successfully uninstalled kiwisolver-1.4.7\n",
            "  Attempting uninstall: jupyterlab-widgets\n",
            "    Found existing installation: jupyterlab_widgets 3.0.13\n",
            "    Uninstalling jupyterlab_widgets-3.0.13:\n",
            "      Successfully uninstalled jupyterlab_widgets-3.0.13\n",
            "  Attempting uninstall: itsdangerous\n",
            "    Found existing installation: itsdangerous 2.2.0\n",
            "    Uninstalling itsdangerous-2.2.0:\n",
            "      Successfully uninstalled itsdangerous-2.2.0\n",
            "  Attempting uninstall: idna\n",
            "    Found existing installation: idna 3.10\n",
            "    Uninstalling idna-3.10:\n",
            "      Successfully uninstalled idna-3.10\n",
            "  Attempting uninstall: google\n",
            "    Found existing installation: google 2.0.3\n",
            "    Uninstalling google-2.0.3:\n",
            "      Successfully uninstalled google-2.0.3\n",
            "  Attempting uninstall: entrypoints\n",
            "    Found existing installation: entrypoints 0.4\n",
            "    Uninstalling entrypoints-0.4:\n",
            "      Successfully uninstalled entrypoints-0.4\n",
            "  Attempting uninstall: defusedxml\n",
            "    Found existing installation: defusedxml 0.7.1\n",
            "    Uninstalling defusedxml-0.7.1:\n",
            "      Successfully uninstalled defusedxml-0.7.1\n",
            "  Attempting uninstall: cachetools\n",
            "    Found existing installation: cachetools 5.5.0\n",
            "    Uninstalling cachetools-5.5.0:\n",
            "      Successfully uninstalled cachetools-5.5.0\n",
            "  Attempting uninstall: attrs\n",
            "    Found existing installation: attrs 24.3.0\n",
            "    Uninstalling attrs-24.3.0:\n",
            "      Successfully uninstalled attrs-24.3.0\n",
            "  Attempting uninstall: async-timeout\n",
            "    Found existing installation: async-timeout 4.0.3\n",
            "    Uninstalling async-timeout-4.0.3:\n",
            "      Successfully uninstalled async-timeout-4.0.3\n",
            "  Attempting uninstall: yarl\n",
            "    Found existing installation: yarl 1.18.3\n",
            "    Uninstalling yarl-1.18.3:\n",
            "      Successfully uninstalled yarl-1.18.3\n",
            "  Attempting uninstall: terminado\n",
            "    Found existing installation: terminado 0.18.1\n",
            "    Uninstalling terminado-0.18.1:\n",
            "      Successfully uninstalled terminado-0.18.1\n",
            "  Attempting uninstall: pytest\n",
            "    Found existing installation: pytest 8.3.4\n",
            "    Uninstalling pytest-8.3.4:\n",
            "      Successfully uninstalled pytest-8.3.4\n",
            "  Attempting uninstall: prompt-toolkit\n",
            "    Found existing installation: prompt_toolkit 3.0.48\n",
            "    Uninstalling prompt_toolkit-3.0.48:\n",
            "      Successfully uninstalled prompt_toolkit-3.0.48\n",
            "  Attempting uninstall: markdown-it-py\n",
            "    Found existing installation: markdown-it-py 3.0.0\n",
            "    Uninstalling markdown-it-py-3.0.0:\n",
            "      Successfully uninstalled markdown-it-py-3.0.0\n",
            "  Attempting uninstall: jsonschema\n",
            "    Found existing installation: jsonschema 4.23.0\n",
            "    Uninstalling jsonschema-4.23.0:\n",
            "      Successfully uninstalled jsonschema-4.23.0\n",
            "  Attempting uninstall: Jinja2\n",
            "    Found existing installation: Jinja2 3.1.4\n",
            "    Uninstalling Jinja2-3.1.4:\n",
            "      Successfully uninstalled Jinja2-3.1.4\n",
            "  Attempting uninstall: httplib2\n",
            "    Found existing installation: httplib2 0.22.0\n",
            "    Uninstalling httplib2-0.22.0:\n",
            "      Successfully uninstalled httplib2-0.22.0\n",
            "  Attempting uninstall: google-auth\n",
            "    Found existing installation: google-auth 2.27.0\n",
            "    Uninstalling google-auth-2.27.0:\n",
            "      Successfully uninstalled google-auth-2.27.0\n",
            "  Attempting uninstall: cycler\n",
            "    Found existing installation: cycler 0.12.1\n",
            "    Uninstalling cycler-0.12.1:\n",
            "      Successfully uninstalled cycler-0.12.1\n",
            "  Attempting uninstall: bleach\n",
            "    Found existing installation: bleach 6.2.0\n",
            "    Uninstalling bleach-6.2.0:\n",
            "      Successfully uninstalled bleach-6.2.0\n",
            "  Attempting uninstall: requests-oauthlib\n",
            "    Found existing installation: requests-oauthlib 1.3.1\n",
            "    Uninstalling requests-oauthlib-1.3.1:\n",
            "      Successfully uninstalled requests-oauthlib-1.3.1\n",
            "  Attempting uninstall: plotly\n",
            "    Found existing installation: plotly 5.24.1\n",
            "    Uninstalling plotly-5.24.1:\n",
            "      Successfully uninstalled plotly-5.24.1\n",
            "  Attempting uninstall: ipython\n",
            "    Found existing installation: ipython 7.34.0\n",
            "    Uninstalling ipython-7.34.0:\n",
            "      Successfully uninstalled ipython-7.34.0\n",
            "  Attempting uninstall: Flask\n",
            "    Found existing installation: Flask 3.1.0\n",
            "    Uninstalling Flask-3.1.0:\n",
            "      Successfully uninstalled Flask-3.1.0\n",
            "  Attempting uninstall: argon2-cffi\n",
            "    Found existing installation: argon2-cffi 23.1.0\n",
            "    Uninstalling argon2-cffi-23.1.0:\n",
            "      Successfully uninstalled argon2-cffi-23.1.0\n",
            "  Attempting uninstall: aiohttp\n",
            "    Found existing installation: aiohttp 3.11.10\n",
            "    Uninstalling aiohttp-3.11.10:\n",
            "      Successfully uninstalled aiohttp-3.11.10\n",
            "  Attempting uninstall: tweepy\n",
            "    Found existing installation: tweepy 4.14.0\n",
            "    Uninstalling tweepy-4.14.0:\n",
            "      Successfully uninstalled tweepy-4.14.0\n",
            "  Attempting uninstall: seaborn\n",
            "    Found existing installation: seaborn 0.13.2\n",
            "    Uninstalling seaborn-0.13.2:\n",
            "      Successfully uninstalled seaborn-0.13.2\n",
            "  Attempting uninstall: nbclient\n",
            "    Found existing installation: nbclient 0.10.1\n",
            "    Uninstalling nbclient-0.10.1:\n",
            "      Successfully uninstalled nbclient-0.10.1\n",
            "  Attempting uninstall: nbconvert\n",
            "    Found existing installation: nbconvert 7.16.4\n",
            "    Uninstalling nbconvert-7.16.4:\n",
            "      Successfully uninstalled nbconvert-7.16.4\n",
            "  Attempting uninstall: jupyter-console\n",
            "    Found existing installation: jupyter-console 6.1.0\n",
            "    Uninstalling jupyter-console-6.1.0:\n",
            "      Successfully uninstalled jupyter-console-6.1.0\n",
            "  Attempting uninstall: notebook\n",
            "    Found existing installation: notebook 6.5.5\n",
            "    Uninstalling notebook-6.5.5:\n",
            "      Successfully uninstalled notebook-6.5.5\n",
            "  Attempting uninstall: widgetsnbextension\n",
            "    Found existing installation: widgetsnbextension 3.6.10\n",
            "    Uninstalling widgetsnbextension-3.6.10:\n",
            "      Successfully uninstalled widgetsnbextension-3.6.10\n",
            "  Attempting uninstall: ipywidgets\n",
            "    Found existing installation: ipywidgets 7.7.1\n",
            "    Uninstalling ipywidgets-7.7.1:\n",
            "      Successfully uninstalled ipywidgets-7.7.1\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "bigframes 1.29.0 requires google-auth<3.0dev,>=2.15.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "bigframes 1.29.0 requires ipywidgets>=7.7.1, but you have ipywidgets 7.6.6 which is incompatible.\n",
            "bigquery-magics 0.4.0 requires ipython>=7.23.1, but you have ipython 6.5.0 which is incompatible.\n",
            "bigquery-magics 0.4.0 requires ipywidgets>=7.7.1, but you have ipywidgets 7.6.6 which is incompatible.\n",
            "bokeh 3.6.2 requires tornado>=6.2, but you have tornado 5.1.1 which is incompatible.\n",
            "branca 0.8.1 requires jinja2>=3, but you have jinja2 2.11.3 which is incompatible.\n",
            "google-ai-generativelanguage 0.6.10 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-api-core 2.19.2 requires google-auth<3.0.dev0,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-api-python-client 2.155.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0.dev0,>=1.32.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-auth-oauthlib 1.2.1 requires google-auth>=2.15.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-aiplatform 1.74.0 requires google-auth<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-bigquery 3.25.0 requires google-auth<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-bigquery-connection 1.17.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-bigquery-storage 2.27.0 requires google-auth<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-bigtable 2.27.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-core 2.4.1 requires google-auth<3.0dev,>=1.25.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-datastore 2.20.2 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-firestore 2.19.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-functions 1.19.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-iam 2.17.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-language 2.16.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-pubsub 2.27.1 requires google-auth<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-resource-manager 1.14.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-storage 2.19.0 requires google-auth<3.0dev,>=2.26.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-cloud-translate 3.19.0 requires google-auth!=2.24.0,!=2.25.0,<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-colab 1.0.0 requires google-auth==2.27.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-colab 1.0.0 requires ipython==7.34.0, but you have ipython 6.5.0 which is incompatible.\n",
            "google-colab 1.0.0 requires notebook==6.5.5, but you have notebook 6.1.6 which is incompatible.\n",
            "google-colab 1.0.0 requires tornado==6.3.3, but you have tornado 5.1.1 which is incompatible.\n",
            "google-genai 0.3.0 requires google-auth<3.0.0dev,>=2.14.1, but you have google-auth 1.21.1 which is incompatible.\n",
            "google-generativeai 0.8.3 requires google-auth>=2.15.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "importlib-metadata 8.5.0 requires zipp>=3.20, but you have zipp 3.3.1 which is incompatible.\n",
            "jupyter-server 1.24.0 requires tornado>=6.1.0, but you have tornado 5.1.1 which is incompatible.\n",
            "kaggle 1.6.17 requires certifi>=2023.7.22, but you have certifi 2020.6.20 which is incompatible.\n",
            "langchain 0.3.12 requires aiohttp<4.0.0,>=3.8.3, but you have aiohttp 3.7.3 which is incompatible.\n",
            "langchain 0.3.12 requires async-timeout<5.0.0,>=4.0.0; python_version < \"3.11\", but you have async-timeout 3.0.1 which is incompatible.\n",
            "mdit-py-plugins 0.4.2 requires markdown-it-py<4.0.0,>=1.0.0, but you have markdown-it-py 0.5.8 which is incompatible.\n",
            "pandas-gbq 0.25.0 requires google-auth>=2.13.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "pydata-google-auth 1.9.0 requires google-auth<3.0dev,>=1.25.0, but you have google-auth 1.21.1 which is incompatible.\n",
            "pydot 3.0.3 requires pyparsing>=3.0.9, but you have pyparsing 2.4.7 which is incompatible.\n",
            "referencing 0.35.1 requires attrs>=22.2.0, but you have attrs 20.3.0 which is incompatible.\n",
            "rich 13.9.4 requires markdown-it-py>=2.2.0, but you have markdown-it-py 0.5.8 which is incompatible.\n",
            "sentry-sdk 2.19.2 requires urllib3>=1.26.11, but you have urllib3 1.24.3 which is incompatible.\n",
            "sphinx 8.1.3 requires Jinja2>=3.1, but you have jinja2 2.11.3 which is incompatible.\n",
            "yfinance 0.2.50 requires beautifulsoup4>=4.11.1, but you have beautifulsoup4 4.6.3 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed Brotli-1.0.9 CherryPy-18.6.0 Flask-1.1.2 Flask-Compress-1.7.0 Jinja2-2.11.3 MarkupSafe-1.1.1 QtPy-1.9.0 Send2Trash-1.5.0 Werkzeug-1.0.1 aiohttp-3.7.3 apiclient-1.0.4 argon2-cffi-20.1.0 async-timeout-3.0.1 atomicwrites-1.4.0 attrs-20.3.0 beautifulsoup4-4.6.3 bleach-3.2.1 cachetools-4.2.4 certifi-2020.6.20 chardet-3.0.4 cheroot-8.5.2 colorama-0.4.3 cssselect-1.2.0 curlify-2.2.1 cycler-0.10.0 dash-1.17.0 dash-core-components-1.13.0 dash-html-components-1.1.1 dash-renderer-1.8.3 dash-table-4.11.0 defusedxml-0.6.0 entrypoints-0.3 eurostat-0.2.1 facebook-business-9.0.3 future-0.16.0 google-3.0.0 google-auth-1.21.1 httplib2-0.19.0 idna-2.10 idna-ssl-1.1.0 iniconfig-1.1.1 ipython-6.5.0 ipywidgets-7.6.6 itsdangerous-1.1.0 jaraco.classes-3.2.1 jaraco.collections-3.2.0 jaraco.functools-3.2.1 jaraco.text-3.5.0 jedi-0.17.2 json5-0.10.0 jsonpath-rw-1.4.0 jsonschema-4.17.3 jupyter-1.1.1 jupyter-console-5.2.0 jupyterlab-2.3.2 jupyterlab-server-1.2.0 jupyterlab-widgets-1.1.11 jupytext-1.6.0 kiwisolver-1.2.0 markdown-it-py-0.5.8 mistune-0.8.4 more-itertools-8.7.0 multidict-5.1.0 nbclient-0.5.13 nbconvert-6.4.4 notebook-6.1.6 oauthlib-3.1.0 pandaSDMX-0.9 pandocfilters-1.4.2 parso-0.7.1 pexpect-4.8.0 plotly-4.4.1 pluggy-0.13.1 portend-2.7.1 prometheus-client-0.8.0 prompt-toolkit-1.0.18 ptyprocess-0.6.0 py-1.9.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 pycountry-20.7.3 pycparser-2.20 pymongo-3.11.0 pyparsing-2.4.7 pyrsistent-0.17.3 pytest-6.1.2 qtconsole-4.7.7 requests-oauthlib-1.3.0 retrying-1.3.3 rsa-4.7.1 seaborn-0.11.0 selenium-3.141.0 simplegeneric-0.8.1 six-1.15.0 soupsieve-2.0.1 tempora-5.8.0 terminado-0.9.1 testpath-0.4.4 toml-0.10.1 tornado-5.1.1 tweepy-3.6.0 ujson-4.0.1 urllib3-1.24.3 wcwidth-0.2.5 widgetsnbextension-3.5.1 wincertstore-0.2 world-bank-data-0.1.3 yarl-1.6.3 zc.lockfile-2.0 zipp-3.3.1\n"
          ]
        }
      ],
      "source": [
        "if 'google.colab' in str(get_ipython()):\n",
        "    !git clone https://github.com/griu/mbdds_fc20.git /content/mbdds_fc20\n",
        "    !git -C /content/mbdds_fc20 pull\n",
        "    %cd /content/mbdds_fc20/Python\n",
        "    !python -m pip install -r requirementsColab.txt"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1J4h6kTngjn5"
      },
      "source": [
        "# Ejercicio 1\n",
        "\n",
        "Para realizar el ejercicio cargamos los datos de *Especies* en STARWARS SWAPI y las librerías principales."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "2V3mrVHSgjn7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "d55b6535-dae6-4a19-8a7a-7ab08f6eb443"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       height    mass  birth_year         gender  \\\n",
              "name                                                               \n",
              "Luke Skywalker          172.0    77.0        19.0           male   \n",
              "C-3PO                   167.0    75.0       112.0           none   \n",
              "R2-D2                    96.0    32.0        33.0           none   \n",
              "Darth Vader             202.0   136.0        41.9           male   \n",
              "Leia Organa             150.0    49.0        19.0         female   \n",
              "Owen Lars               178.0   120.0        52.0           male   \n",
              "Beru Whitesun lars      165.0    75.0        47.0         female   \n",
              "Biggs Darklighter       183.0    84.0        24.0           male   \n",
              "Obi-Wan Kenobi          182.0    77.0        57.0           male   \n",
              "Anakin Skywalker        188.0    84.0        41.9           male   \n",
              "Chewbacca               228.0   112.0       200.0           male   \n",
              "Han Solo                180.0    80.0        29.0           male   \n",
              "Greedo                  173.0    74.0        44.0           male   \n",
              "Jabba Desilijic Tiure   175.0  1358.0       600.0  hermaphrodite   \n",
              "Wedge Antilles          170.0    77.0        21.0           male   \n",
              "Yoda                     66.0    17.0       896.0           male   \n",
              "Palpatine               170.0    75.0        82.0           male   \n",
              "Boba Fett               183.0    78.2        31.5           male   \n",
              "IG-88                   200.0   140.0        15.0           none   \n",
              "Bossk                   190.0   113.0        53.0           male   \n",
              "Lando Calrissian        177.0    79.0        31.0           male   \n",
              "Lobot                   175.0    79.0        37.0           male   \n",
              "Ackbar                  180.0    83.0        41.0           male   \n",
              "Wicket Systri Warrick    88.0    20.0         8.0           male   \n",
              "Qui-Gon Jinn            193.0    89.0        92.0           male   \n",
              "Padmé Amidala           185.0    45.0        46.0         female   \n",
              "Jar Jar Binks           196.0    66.0        52.0           male   \n",
              "Darth Maul              175.0    80.0        54.0           male   \n",
              "Ayla Secura             178.0    55.0        48.0         female   \n",
              "Mace Windu              188.0    84.0        72.0           male   \n",
              "Ki-Adi-Mundi            198.0    82.0        92.0           male   \n",
              "Plo Koon                188.0    80.0        22.0           male   \n",
              "Luminara Unduli         170.0    56.2        58.0         female   \n",
              "Barriss Offee           166.0    50.0        40.0         female   \n",
              "Dooku                   193.0    80.0       102.0           male   \n",
              "Jango Fett              183.0    79.0        66.0           male   \n",
              "\n",
              "                                              homeworld  \n",
              "name                                                     \n",
              "Luke Skywalker          http://swapi.dev/api/planets/1/  \n",
              "C-3PO                   http://swapi.dev/api/planets/1/  \n",
              "R2-D2                   http://swapi.dev/api/planets/8/  \n",
              "Darth Vader             http://swapi.dev/api/planets/1/  \n",
              "Leia Organa             http://swapi.dev/api/planets/2/  \n",
              "Owen Lars               http://swapi.dev/api/planets/1/  \n",
              "Beru Whitesun lars      http://swapi.dev/api/planets/1/  \n",
              "Biggs Darklighter       http://swapi.dev/api/planets/1/  \n",
              "Obi-Wan Kenobi         http://swapi.dev/api/planets/20/  \n",
              "Anakin Skywalker        http://swapi.dev/api/planets/1/  \n",
              "Chewbacca              http://swapi.dev/api/planets/14/  \n",
              "Han Solo               http://swapi.dev/api/planets/22/  \n",
              "Greedo                 http://swapi.dev/api/planets/23/  \n",
              "Jabba Desilijic Tiure  http://swapi.dev/api/planets/24/  \n",
              "Wedge Antilles         http://swapi.dev/api/planets/22/  \n",
              "Yoda                   http://swapi.dev/api/planets/28/  \n",
              "Palpatine               http://swapi.dev/api/planets/8/  \n",
              "Boba Fett              http://swapi.dev/api/planets/10/  \n",
              "IG-88                  http://swapi.dev/api/planets/28/  \n",
              "Bossk                  http://swapi.dev/api/planets/29/  \n",
              "Lando Calrissian       http://swapi.dev/api/planets/30/  \n",
              "Lobot                   http://swapi.dev/api/planets/6/  \n",
              "Ackbar                 http://swapi.dev/api/planets/31/  \n",
              "Wicket Systri Warrick   http://swapi.dev/api/planets/7/  \n",
              "Qui-Gon Jinn           http://swapi.dev/api/planets/28/  \n",
              "Padmé Amidala           http://swapi.dev/api/planets/8/  \n",
              "Jar Jar Binks           http://swapi.dev/api/planets/8/  \n",
              "Darth Maul             http://swapi.dev/api/planets/36/  \n",
              "Ayla Secura            http://swapi.dev/api/planets/37/  \n",
              "Mace Windu             http://swapi.dev/api/planets/42/  \n",
              "Ki-Adi-Mundi           http://swapi.dev/api/planets/43/  \n",
              "Plo Koon               http://swapi.dev/api/planets/49/  \n",
              "Luminara Unduli        http://swapi.dev/api/planets/51/  \n",
              "Barriss Offee          http://swapi.dev/api/planets/51/  \n",
              "Dooku                  http://swapi.dev/api/planets/52/  \n",
              "Jango Fett             http://swapi.dev/api/planets/53/  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-51ef4da6-0a4b-488b-b18b-c88513ffe551\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>height</th>\n",
              "      <th>mass</th>\n",
              "      <th>birth_year</th>\n",
              "      <th>gender</th>\n",
              "      <th>homeworld</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>name</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Luke Skywalker</th>\n",
              "      <td>172.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>C-3PO</th>\n",
              "      <td>167.0</td>\n",
              "      <td>75.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>none</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>R2-D2</th>\n",
              "      <td>96.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>none</td>\n",
              "      <td>http://swapi.dev/api/planets/8/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Darth Vader</th>\n",
              "      <td>202.0</td>\n",
              "      <td>136.0</td>\n",
              "      <td>41.9</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Leia Organa</th>\n",
              "      <td>150.0</td>\n",
              "      <td>49.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/2/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Owen Lars</th>\n",
              "      <td>178.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>52.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Beru Whitesun lars</th>\n",
              "      <td>165.0</td>\n",
              "      <td>75.0</td>\n",
              "      <td>47.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Biggs Darklighter</th>\n",
              "      <td>183.0</td>\n",
              "      <td>84.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Obi-Wan Kenobi</th>\n",
              "      <td>182.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>57.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/20/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anakin Skywalker</th>\n",
              "      <td>188.0</td>\n",
              "      <td>84.0</td>\n",
              "      <td>41.9</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/1/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chewbacca</th>\n",
              "      <td>228.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/14/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Han Solo</th>\n",
              "      <td>180.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/22/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Greedo</th>\n",
              "      <td>173.0</td>\n",
              "      <td>74.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/23/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Jabba Desilijic Tiure</th>\n",
              "      <td>175.0</td>\n",
              "      <td>1358.0</td>\n",
              "      <td>600.0</td>\n",
              "      <td>hermaphrodite</td>\n",
              "      <td>http://swapi.dev/api/planets/24/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wedge Antilles</th>\n",
              "      <td>170.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/22/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Yoda</th>\n",
              "      <td>66.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>896.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/28/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Palpatine</th>\n",
              "      <td>170.0</td>\n",
              "      <td>75.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/8/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Boba Fett</th>\n",
              "      <td>183.0</td>\n",
              "      <td>78.2</td>\n",
              "      <td>31.5</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/10/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IG-88</th>\n",
              "      <td>200.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>none</td>\n",
              "      <td>http://swapi.dev/api/planets/28/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bossk</th>\n",
              "      <td>190.0</td>\n",
              "      <td>113.0</td>\n",
              "      <td>53.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/29/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lando Calrissian</th>\n",
              "      <td>177.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/30/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Lobot</th>\n",
              "      <td>175.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/6/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ackbar</th>\n",
              "      <td>180.0</td>\n",
              "      <td>83.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/31/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Wicket Systri Warrick</th>\n",
              "      <td>88.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/7/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Qui-Gon Jinn</th>\n",
              "      <td>193.0</td>\n",
              "      <td>89.0</td>\n",
              "      <td>92.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/28/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Padmé Amidala</th>\n",
              "      <td>185.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>46.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/8/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Jar Jar Binks</th>\n",
              "      <td>196.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>52.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/8/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Darth Maul</th>\n",
              "      <td>175.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/36/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ayla Secura</th>\n",
              "      <td>178.0</td>\n",
              "      <td>55.0</td>\n",
              "      <td>48.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/37/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mace Windu</th>\n",
              "      <td>188.0</td>\n",
              "      <td>84.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/42/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ki-Adi-Mundi</th>\n",
              "      <td>198.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>92.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/43/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Plo Koon</th>\n",
              "      <td>188.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/49/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Luminara Unduli</th>\n",
              "      <td>170.0</td>\n",
              "      <td>56.2</td>\n",
              "      <td>58.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/51/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Barriss Offee</th>\n",
              "      <td>166.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>40.0</td>\n",
              "      <td>female</td>\n",
              "      <td>http://swapi.dev/api/planets/51/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dooku</th>\n",
              "      <td>193.0</td>\n",
              "      <td>80.0</td>\n",
              "      <td>102.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/52/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Jango Fett</th>\n",
              "      <td>183.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>male</td>\n",
              "      <td>http://swapi.dev/api/planets/53/</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51ef4da6-0a4b-488b-b18b-c88513ffe551')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-51ef4da6-0a4b-488b-b18b-c88513ffe551 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-51ef4da6-0a4b-488b-b18b-c88513ffe551');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fa69cf7b-5358-4134-8205-b12bab289172\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa69cf7b-5358-4134-8205-b12bab289172')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fa69cf7b-5358-4134-8205-b12bab289172 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_4fdacfea-11e4-4677-8bea-699f32f2cc98\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('people_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_4fdacfea-11e4-4677-8bea-699f32f2cc98 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('people_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "people_df",
              "summary": "{\n  \"name\": \"people_df\",\n  \"rows\": 36,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36,\n        \"samples\": [\n          \"Jango Fett\",\n          \"Jabba Desilijic Tiure\",\n          \"Jar Jar Binks\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30.941560379692532,\n        \"min\": 66.0,\n        \"max\": 228.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          182.0,\n          200.0,\n          172.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 215.20502649466957,\n        \"min\": 17.0,\n        \"max\": 1358.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          80.0,\n          83.0,\n          77.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"birth_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169.12434711097714,\n        \"min\": 8.0,\n        \"max\": 896.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          40.0,\n          31.5,\n          54.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"none\",\n          \"hermaphrodite\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"homeworld\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"http://swapi.dev/api/planets/36/\",\n          \"http://swapi.dev/api/planets/10/\",\n          \"http://swapi.dev/api/planets/1/\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns; sns.set()  # para el estilo de graficos\n",
        "\n",
        "entidades = ['planets','starships','vehicles','people','species']\n",
        "entidades_df = {x: pd.read_pickle('www/' + x + '_df.pkl') for x in entidades}\n",
        "\n",
        "# Datos principales\n",
        "people_df = entidades_df['people'][[\"height\",\"mass\",\"birth_year\",\"gender\",\"homeworld\"]].dropna()\n",
        "\n",
        "people_df"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8y6PLIR-gjoF"
      },
      "source": [
        "## Ejercicio 1.1.\n",
        "\n",
        "Construye un gráfico de dispersión de los personajes donde se visualice: la altura (height), el peso (mass), la edad en años BBY (birth_year) y el género (gender). Para ello utiliza la función `sns.scatterplot()` de la librería seaborn. Aprovecha todos los parámetros: `x`, `y`, `size`, `hue` y `style` (consulta la ayuda de la función [.scatterplot()](https://seaborn.pydata.org/generated/seaborn.scatterplot.html)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "fURT1ovigjoH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "outputId": "288ff44d-7f2e-49b8-b78d-e8d67da9c605"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "sns.scatterplot(data = people_df, x = \"mass\", y = \"height\",\n",
        "                size = \"birth_year\", hue = \"gender\")\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** El gráfico relaciona la masa y la altura de los individuos de Star Wars, destacando una mayor concentración de seres entre 1.6 y 2 metros de altura y entre 50 y 100 kilos de peso. Esto se debe a que la mayoría de los personajes, aunque de especies distintas, mantienen una estructura corporal propia de un humanoide dando lugar a características físicas similares. Podemos ver también una mayor presencia del genero masculino frente a otros géneros, siendo el género femenino el segundo más representado.\n",
        "\n",
        "Debemos tener en cuenta los valores atípicos del gráfico:\n",
        "\n",
        "*   Un punto en el extremo del eje X, representado por un individuo hermafrodita de una masa sustancialmente mayor al resto (Jabba).\n",
        "*   Tres puntos con una altura menor de 1 metro, dos masculinos (Yoda y Wicket W. Warrick) y uno sin género (R2D2).\n",
        "*   Un punto con una altura superior a 2,2 metros, de género masculino (Chewbacca).\n",
        "\n",
        "En general, el gráfico no solo facilita la comprensión de la distribución, sino que también permite identificar excepciones significativas y la diversidad de la muestra.\n",
        "\n"
      ],
      "metadata": {
        "id": "1W-Zyd7xhTyL"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1MofC8dugjoQ"
      },
      "source": [
        "## Ejercicio 1.2.\n",
        "\n",
        "Sobre el gráfico del ejercicio 1.1:\n",
        "\n",
        "- Pon título al gráfico y a los ejes x e y.\n",
        "- Modifica los límites del eje y para que aparezcan sólo personajes de menos de 150 Kg de peso.\n",
        "- Sitúa en el gráfico los nombres de \"Darth Vader\" y \"Anakin Skywalker\". ¿Cómo es posible tengan un peso y altura tan distintos si eran la misma persona?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "iHmGn9OrgjoS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "outputId": "9abb56ce-14d4-4dcf-b4f9-ef5297f5ceef"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "df_filtrado = people_df[people_df[\"mass\"] < 150].copy()\n",
        "df_filtrado = df_filtrado.rename(columns = {\"gender\": \"Género\",\n",
        "                                           \"birth_year\": \"Edad\"})\n",
        "df_filtrado[\"Género\"] = df_filtrado[\"Género\"].replace({\"male\" : \"Masculino\",\n",
        "                                                       \"female\" : \"Femenino\",\n",
        "                                                       \"none\" : \"Ninguno\"})\n",
        "\n",
        "sns.scatterplot(data = df_filtrado, x = \"mass\", y = \"height\",\n",
        "                size = \"Edad\", hue = \"Género\")\n",
        "\n",
        "plt.title(\"Relación entre Altura, Peso, Edad y Género\")\n",
        "plt.xlabel(\"Peso (kg)\")\n",
        "plt.ylabel(\"Altura (cm)\")\n",
        "\n",
        "plt.xticks(range(10, 151, 10))\n",
        "plt.yticks(range(60, 241, 20))\n",
        "\n",
        "plt.text(84, 188, \"Anakin Skywalker -->\", fontsize = 9,\n",
        "         ha = \"right\", va = \"center\")\n",
        "plt.text(136, 202, \"Darth Vader -->\", fontsize = 9,\n",
        "         ha = \"right\", va = \"center\")\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** La diferencia de la altura y el peso es consecuencia de la batalla contra su antiguo maestro, Obi-Wan Kenobi, en el planeta Mustafar. Tras el duelo, Anakin perdió ambas piernas y estuvo a punto de morir, pero fue encontrado por Darth Sidious. Éste reemplazó las piernas de Anakin por prótesis robóticas, además de diseñar el que sería el traje de Darth Vader, que tendría un fin intimidatorio. Estas nuevas características físicas conferidas tanto por su cambio corporal como por el traje, son el motivo de esa variación de peso y altura respecto al personaje original.\n",
        "\n",
        "**Nota**. La decisión en la traducción de las columnas de \"gender\" y \"birth_year\", además de los posibles valores de género, se debe principalmente a la necesidad de mantener una estructura lingüística coherente, facilitando así la interpretación y visualización de los datos."
      ],
      "metadata": {
        "id": "58CSbYlJIzov"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "D2pjJXbcgjoa"
      },
      "source": [
        "## Ejercicio 1.3.\n",
        "\n",
        "Utiliza las *list comprehension* para calcular el cuadrado de los valores positivos de la siguiente lista:\n",
        "\n",
        "Muestra el resultado por pantalla."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "WJjNiT3Qgjoc"
      },
      "outputs": [],
      "source": [
        "val = [5, 6, -1, 2, -3, -7, 9, 1]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "9Hf_uH8ugjol",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4e976721-ac10-400f-f4cd-5ab1b5c0857c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mEl cuadrado de los valores positivos es:\u001b[0m\n",
            "\n",
            "[25, 36, 4, 81, 1]\n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "cuadrado_de_positivos = [x**2 for x in val if x > 0]\n",
        "\n",
        "print(\"\\033[1mEl cuadrado de los valores positivos es:\\033[0m\\n\")\n",
        "print(cuadrado_de_positivos)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AE6CcvVggjou"
      },
      "source": [
        "## Ejercicio 1.4.\n",
        "\n",
        "Construye un diccionario donde se identifique, mediante claves y valores, las siguientes características del personaje Yoda: \"nombre\", \"altura\", \"peso\", \"edad\" y \"genero\". Utiliza los datos de people_df.\n",
        "\n",
        "Muestra el diccionario por pantalla."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "eaq6M61-gjo4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5f12db30-f777-438b-fd30-a1cb060e62a8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mCaracterísticas de Yoda\u001b[0m\n",
            "\n",
            "\u001b[1mNombre\u001b[0m: Yoda\n",
            "\u001b[1mAltura\u001b[0m: 66.0 cm\n",
            "\u001b[1mPeso\u001b[0m: 17.0 kg\n",
            "\u001b[1mEdad\u001b[0m: 896.0 años\n",
            "\u001b[1mGénero\u001b[0m: Masculino\n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "personaje_yoda = people_df.loc[\"Yoda\"]\n",
        "\n",
        "diccionario_yoda = {\n",
        "    \"\\033[1mNombre\\033[0m\" : \"Yoda\",\n",
        "    \"\\033[1mAltura\\033[0m\" : f'{personaje_yoda[\"height\"]} cm',\n",
        "    \"\\033[1mPeso\\033[0m\" : f'{personaje_yoda[\"mass\"]} kg',\n",
        "    \"\\033[1mEdad\\033[0m\" : f'{personaje_yoda[\"birth_year\"]} años',\n",
        "    \"\\033[1mGénero\\033[0m\" : (\"Masculino\" if personaje_yoda[\"gender\"] == \"male\"\n",
        "                              else \"Femenino\"\n",
        "                                if personaje_yoda[\"gender\"] == \"female\"\n",
        "                              else \"Hermafrodita\"\n",
        "                                if personaje_yoda[\"gender\"] == \"hermaphrodite\"\n",
        "                              else \"Ninguno\")\n",
        "}\n",
        "\n",
        "print(\"\\033[1mCaracterísticas de Yoda\\033[0m\\n\")\n",
        "for clave, valor in diccionario_yoda.items():\n",
        "  print(f\"{clave}: {valor}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** De igual forma que en el ejercicio 1.2, he realizado algunas modificaciones con el fin de facilitar la visualización de los datos: traducción de los valores de la columna \"gender\" y adición de las unidades en los campos necesarios."
      ],
      "metadata": {
        "id": "UxHztP2MiD_Z"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z2bkPuuEgjpA"
      },
      "source": [
        "## Ejercicio 1.5.\n",
        "\n",
        "Calcula, a partir de los vectores numpy de altura y peso, vectores numpy que debe definir, el [índice de masa corporal (IMC)](https://es.wikipedia.org/wiki/%C3%8Dndice_de_masa_corporal) de los personajes de star wars contenidos en people_df:\n",
        "\n",
        "$IMC = \\frac{peso}{altura^{2}}$ donde altura está en metros y el peso en kg.\n",
        "\n",
        "Muestra los datos por pantalla."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "j6vDGHHngjpK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1b133d14-b0e2-4936-8d4d-1930afa050b6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                          IMC\n",
            "name                         \n",
            "Luke Skywalker          26.03\n",
            "C-3PO                   26.89\n",
            "R2-D2                   34.72\n",
            "Darth Vader             33.33\n",
            "Leia Organa             21.78\n",
            "Owen Lars               37.87\n",
            "Beru Whitesun lars      27.55\n",
            "Biggs Darklighter       25.08\n",
            "Obi-Wan Kenobi          23.25\n",
            "Anakin Skywalker        23.77\n",
            "Chewbacca               21.55\n",
            "Han Solo                24.69\n",
            "Greedo                  24.73\n",
            "Jabba Desilijic Tiure  443.43\n",
            "Wedge Antilles          26.64\n",
            "Yoda                    39.03\n",
            "Palpatine               25.95\n",
            "Boba Fett               23.35\n",
            "IG-88                   35.00\n",
            "Bossk                   31.30\n",
            "Lando Calrissian        25.22\n",
            "Lobot                   25.80\n",
            "Ackbar                  25.62\n",
            "Wicket Systri Warrick   25.83\n",
            "Qui-Gon Jinn            23.89\n",
            "Padmé Amidala           13.15\n",
            "Jar Jar Binks           17.18\n",
            "Darth Maul              26.12\n",
            "Ayla Secura             17.36\n",
            "Mace Windu              23.77\n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "imc_personajes = people_df[[\"height\", \"mass\"]].copy()\n",
        "\n",
        "height_m = imc_personajes[\"height\"] / 100\n",
        "mass_kg = imc_personajes[\"mass\"]\n",
        "imc_personajes[\"IMC\"] = (mass_kg / (height_m ** 2)).round(2)\n",
        "\n",
        "print(imc_personajes[[\"IMC\"]].head(30))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "165OA48hgjpR"
      },
      "source": [
        "## Ejercicio 1.6.\n",
        "\n",
        "A partir del IMC que has calculado en el ejercicio 1.5. Construye un panel con dos histogramas:\n",
        "\n",
        "- Un histograma con toda la muestra\n",
        "- Un histograma seleccionando los valores con un IMC inferior a 100."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "tRACj-JDgjpT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "71068151-7962-4406-dd6c-d802c71629c1"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "fig, hg = plt.subplots(nrows = 1, ncols = 2, figsize = (14, 6))\n",
        "\n",
        "hg[0].hist(imc_personajes[\"IMC\"], bins = 20, color = \"gold\",\n",
        "           edgecolor = \"black\")\n",
        "hg[0].set_title(\"Distribución del IMC - Toda la Muestra\")\n",
        "hg[0].set_xlabel(\"IMC\")\n",
        "hg[0].set_ylabel(\"Frecuencia\")\n",
        "\n",
        "imc_menor_100 = imc_personajes[imc_personajes[\"IMC\"] < 100]\n",
        "\n",
        "hg[1].hist(imc_menor_100[\"IMC\"], bins = 20, color = \"pink\",\n",
        "           edgecolor = \"black\")\n",
        "hg[1].set_title(\"Distribución del IMC - IMC < 100\")\n",
        "hg[1].set_xlabel(\"IMC\")\n",
        "hg[1].set_ylabel(\"Frecuencia\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** En el primer histograma, podemos observar cómo la mayoría de los valores de IMC se sitúan en el rango de 0 a 50, con una frecuencia máxima que supera ligeramente los 30; también encontramos un valor atípico por encima de 400 correspondiente a Jabba, como veremos en el ejercicio 1.9. El segundo histograma proporciona una visión más detallada de la distribución predominante, mostrando que la mayoría de los valores de IMC se encuentran entre 20 y 30, con una frecuencia máxima (7) en torno a 25 de IMC."
      ],
      "metadata": {
        "id": "ma4DCWfpfPpk"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zsqrzaingjpb"
      },
      "source": [
        "## Ejercicio 1.7.\n",
        "\n",
        "A partir del vector 1 y 2 que se definen a continuación contesta las siguientes preguntas:\n",
        "\n",
        "- Calcula el shape, ndim, size del vector1 y vector2\n",
        "- Explica cual es la diferencia entre vector1 y vector2 a partir de los que hayas observado"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "DYLofIqugjpc"
      },
      "outputs": [],
      "source": [
        "df_vectores = people_df[[\"height\", \"mass\"]].copy()\n",
        "altura = df_vectores[\"height\"]\n",
        "peso = df_vectores[\"mass\"]\n",
        "\n",
        "vector1 = np.hstack([altura,peso])\n",
        "vector2 = np.vstack([altura,peso])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "1WBV3vUxgjpm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "eb3051c0-b738-43b7-d9cb-bb2817b328dd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mResultados del vector 1\u001b[0m\n",
            "\n",
            "Shape del vector 1: (72,)\n",
            "Ndim del vector 1: 1\n",
            "Size del vector 1: 72\n",
            "\n",
            "\u001b[1mResultados del vector 2\u001b[0m\n",
            "\n",
            "Shape del vector 2: (2, 36)\n",
            "Ndim del vector 2: 2\n",
            "Size del vector 2: 72\n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "print(\"\\033[1mResultados del vector 1\\033[0m\\n\")\n",
        "\n",
        "print(\"Shape del vector 1:\", vector1.shape)\n",
        "print(\"Ndim del vector 1:\", vector1.ndim)\n",
        "print(\"Size del vector 1:\", vector1.size)\n",
        "\n",
        "print(\"\\n\\033[1mResultados del vector 2\\033[0m\\n\")\n",
        "\n",
        "print(\"Shape del vector 2:\", vector2.shape)\n",
        "print(\"Ndim del vector 2:\", vector2.ndim)\n",
        "print(\"Size del vector 2:\", vector2.size)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** Para poder explicar la diferencia de resultados entre ambos vectores, primero tenemos que entender qué hacen las funciones hstack y vstack.\n",
        "\n",
        "*  *hstack*. Las columnas peso y altura se apilan horizontalmente, resultando en un vector unidimensional con una longitud igual a la suma de las longitudes de las dos columnas.\n",
        "*   *vtsack*. Las columnas peso y altura se apilan verticalmente, dando lugar a una matriz bidimensional con dos filas y un número de columnas igual a la longitud de las columnas originales.\n",
        "\n",
        "Shape devuelve: (72,) con el vector 1, indicando que es un vector unidimensional con 72 elementos, y (2, 36) con el vector 2, indicando que es una matriz con dos filas y 36 columnas.\n",
        "\n",
        "Ndim devuelve: 1 con el vector 1, ya que es un vector unidimensional, y 2 con el vector 2 al tratarse de una matriz bidimensional.\n",
        "\n",
        "Size devuelve: 72 con el vector 1, consecuencia de apilar horizontalmente ambas columnas donde se suman todos los elementos de dichas columnas, y 72 también con el vector 2, ya que el total de elementos de la matriz corresponde a la multiplicación de sus dimension: 2 x 36 = 72.\n",
        "\n",
        "**Nota.** He considerado añadir las tres primeras líneas en la celda de código en la que se definen los vectores para crear las variables peso y altura, manteniendo así la integridad del código original.\n",
        "\n"
      ],
      "metadata": {
        "id": "4lHXFSurkzlM"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PnkDGSu0gjpw"
      },
      "source": [
        "## Ejercicio 1.8.\n",
        "\n",
        "Crea una copia de people_df llamada personajes_df y renombra las columnas con su traducción al castellano.\n",
        "\n",
        "Muestra los 5 primeros registros del nuevo data frame con `.head()`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "7jK-a6Engjpx",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a0c8c844-d543-4897-b807-5cfaef9738be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                Altura   Peso   Edad     Género  \\\n",
            "Nombre                                            \n",
            "Luke Skywalker   172.0   77.0   19.0  Masculino   \n",
            "C-3PO            167.0   75.0  112.0    Ninguno   \n",
            "R2-D2             96.0   32.0   33.0    Ninguno   \n",
            "Darth Vader      202.0  136.0   41.9  Masculino   \n",
            "Leia Organa      150.0   49.0   19.0   Femenino   \n",
            "\n",
            "                                  Planeta Natal  \n",
            "Nombre                                           \n",
            "Luke Skywalker  http://swapi.dev/api/planets/1/  \n",
            "C-3PO           http://swapi.dev/api/planets/1/  \n",
            "R2-D2           http://swapi.dev/api/planets/8/  \n",
            "Darth Vader     http://swapi.dev/api/planets/1/  \n",
            "Leia Organa     http://swapi.dev/api/planets/2/  \n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "personajes_df = people_df.copy()\n",
        "\n",
        "personajes_df = personajes_df.rename(columns = {\"height\" : \"Altura\",\n",
        "                                                \"mass\" : \"Peso\",\n",
        "                                                \"birth_year\": \"Edad\",\n",
        "                                                \"gender\" : \"Género\",\n",
        "                                                \"homeworld\": \"Planeta Natal\"})\n",
        "personajes_df[\"Género\"] = personajes_df[\"Género\"].replace({\"male\" : \"Masculino\",\n",
        "                                       \"female\" : \"Femenino\",\n",
        "                                       \"hermaphrodite\" : \"Hermafrodita\",\n",
        "                                       \"none\" : \"Ninguno\"})\n",
        "personajes_df = personajes_df.rename_axis(\"Nombre\")\n",
        "\n",
        "print(personajes_df.head(5))\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** Aunque no se pide explícitamente, he considerado traducir también los valores del campo \"Género\", ya que al haberlo hecho en ejercicios anteriores no me parecía correcto dejarlos en inglés, con la novedad añadida de traducir también el título del índice."
      ],
      "metadata": {
        "id": "rj00hc-gsib_"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "blkoKgizgjp5"
      },
      "source": [
        "## Ejercicio 1.9.\n",
        "\n",
        "Haz el mismo cálculo de IMC que has hecho en 1.5. pero directamente sobre el objeto personajes_df.\n",
        "\n",
        "Ordena el data frame de mayor a menor IMC y muestra el nombre e IMC de los personajes con IMC por encima de 30.\n",
        "\n",
        "> ¿Sabias que IMC por encima de 30 se considera obeso?\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "CHIIcuANgjp6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b9c48b4f-ce7b-4115-e512-b9561d433f67"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                          IMC\n",
            "Nombre                       \n",
            "Jabba Desilijic Tiure  443.43\n",
            "Yoda                    39.03\n",
            "Owen Lars               37.87\n",
            "IG-88                   35.00\n",
            "R2-D2                   34.72\n",
            "Darth Vader             33.33\n",
            "Bossk                   31.30\n"
          ]
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "imc_personajes_df = personajes_df[[\"Altura\", \"Peso\"]].copy()\n",
        "\n",
        "altura_m = imc_personajes_df[\"Altura\"] / 100\n",
        "peso_kg = imc_personajes_df[\"Peso\"]\n",
        "imc_personajes_df[\"IMC\"] = (peso_kg / (altura_m ** 2)).round(2)\n",
        "\n",
        "filtro_imc = imc_personajes_df[imc_personajes_df[\"IMC\"] > 30]\n",
        "filtro_imc = filtro_imc.sort_values(by = \"IMC\", ascending = False)\n",
        "\n",
        "print(filtro_imc[[\"IMC\"]].head(30))\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** Como hemos observado en gráficos previos, Jabba destaca como el personaje con el IMC más alto de todos. Este resultado podía anticiparse a partir de los gráficos de dispersión, donde Jabba aparecía como el punto con la mayor masa, para una altura típica de un humanoide. En los histogramas también era evidente que Jabba tenía un IMC muy superior al del resto de los personajes, siendo el único que queda fuera del filtro de IMC < 100."
      ],
      "metadata": {
        "id": "-e4vkpF3mMjG"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E-goVaMEgjqB"
      },
      "source": [
        "## Ejercicio 1.10.\n",
        "\n",
        "Inserta un valor faltante en los valores de IMC que sean superiores a 100 y dibuja el histograma del IMC transformado con `.plot.hist()`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "oWQQoDs_gjqD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "outputId": "a05cc0db-75a4-4084-c9be-ea05e65c5891"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Solución:\n",
        "\n",
        "imc_nan = imc_personajes_df.copy()\n",
        "imc_nan.loc[imc_nan[\"IMC\"] > 100, \"IMC\"] = np.nan\n",
        "\n",
        "imc_nan[\"IMC\"].plot.hist(bins = 20, color = \"coral\", edgecolor = \"black\")\n",
        "plt.title(\"Distribución del IMC (Transformado)\")\n",
        "plt.xlabel(\"IMC\")\n",
        "plt.ylabel(\"Frecuencia\")\n",
        "\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Comentario del alumno.** De esta forma, obtenemos un histograma similar al segundo del ejercicio 1.6, en el que filtrábamos los valores de IMC < 100."
      ],
      "metadata": {
        "id": "_QhMwxl0qyW5"
      }
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "mbdds_rpy20",
      "language": "python",
      "name": "mbdds_rpy20"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.9"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}